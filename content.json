{"meta":{"title":"博客主页","subtitle":"","description":"","author":"Mr feng","url":"http://example.com","root":"/"},"pages":[{"title":"","date":"2022-01-13T16:20:47.458Z","updated":"2021-07-26T13:55:56.627Z","comments":true,"path":"thinking/babel.html","permalink":"http://example.com/thinking/babel.html","excerpt":"","text":"babel用于es6及以上的语法转换。只关心语法不关心新的api和module； module如果文件中导入了其他js文件，babel本身是无法导入的，所以可以使用webpack，在webpack中一切导入的文件都是模块。 说到模块化，顺便记住：es6的imports 是静态导入，在编译时就导入了； 而commonjs的require是运行时导入，在编译前是不确定文件的。 es 新的api怎么兼容babel-polyfill： core.js + regenerator babel-polyfill的缺点会污染全局变量。如果想要构建第三方库文件，是不能出现环境污染的。 可以使用 babel-runtime解决，原理：改变变量名称，不与使用者的变量发生冲突。"},{"title":"","date":"2022-01-13T16:20:46.160Z","updated":"2021-07-26T13:55:56.627Z","comments":true,"path":"thinking/javascript.html","permalink":"http://example.com/thinking/javascript.html","excerpt":"","text":"javascript框架基础知识一、this的几种指向 在严格模式下自执行函数指向undefined 非严格模式指向自执行函数指向window所以可以用这么判断当前环境是否严格模式 1(function()&#123;return !this&#125;()) 在一个函数a里面定义一个函数b，然后在a函数里调用这个函数b，此时this指向跟自执行函数一样 二、new操作做了什么模拟new的过程: 123456789101112131415const create = function(ClassName, ...args) &#123; //让instant.prototype指向ClassName.prototype，缺少这一步新建的实例就没有ClassName原型 let instant = Object.create(ClassName.prototype) ClassName.apply(instant, args) return instant;&#125;const Dragon = function(name) &#123; this.name = name;&#125;Dragon.prototype.sounds = &#x27;吼吼吼...&#x27;let dragon = create(Dragon, &#x27;小明&#x27;) dragon.name //小明dragon.sounds //吼吼吼... 三，Prototype定义：每个对象都会有prototype，prototype指向一个对象，类似于java的静态变量继承。 为什么会有prototype？ 一切都是为了复用和解藕，所有实例共享一个对象a，a对象是所有实例都需要且一样的。 实例怎么指向原型。 12obj.__proto__obj.constructor.prototype 四，原型链由于prototype指向一个对象。而js对象都会有自己的原型，对象原型＞对象＞对象原型＞对象…，因此形成了原型链。 1. 原型链的尽头是什么呢 每个对象的原型链末端都会经过&lt;u&gt;Object.prototype&lt;/u&gt;，而&lt;u&gt;Object.prototype＝undefined&lt;/u&gt;。 &lt;u&gt;Object.getPrototypeOf(Object.prototype)结果为null&lt;/u&gt; Object.prototype不能够被赋值, 会报错 instanceof判断对象是否属于某个构造器。 [^注意]: 1. 只要一个对象的原型不是null，instanceof运算符的判断就不会失真；2. 对于undefined和null，instanceOf运算符总是返回false； 3. instanceof不适用原始类型的值。 12345var s = &#x27;hello&#x27;;s instanceof String // falseundefined instanceof Object // falsenull instanceof Object // falsethis instanceof ClassName //用于判断是否new出来的 五、javacript 奇淫技巧!~判断indexof 123456!取非0都为真~-1结果为0所以可以用来判断数组是否不包含某个元素if(!~names.indexOf(name))&#123;//...&#125;"},{"title":"","date":"2022-01-13T16:20:45.513Z","updated":"2021-08-30T07:32:40.418Z","comments":true,"path":"thinking/jb-ui.html","permalink":"http://example.com/thinking/jb-ui.html","excerpt":"","text":"快速使用 安装npm包 jb-cms-ui-test 12345npm install jb-cms-ui-testShell 新建一个listMixin.js文件，继承BaseListPage 1234567//listMixin.jsimport Vue from &quot;vue&quot;;import BtnOperate from &quot;@/page/user/components/BtnOperate&quot;;import JBCMSUI from &#x27;@lib/jb_cms_ui&#x27;const &#123; BaseListPage &#125; = JBCMSUIexport default &#123; extends: BaseListPage, beforeMount() &#123; Vue.component(&#x27;btn-operate&#x27;, BtnOperate) &#125;,&#125;TypeScript 在vue文件import， 并且在mixins选项中使用 123456import listMixin from &quot;@/mixins/ListMixin&quot;;export default &#123;...mixins: [listMixin],...&#125;TypeScript 在vue文件的 模板中 123456&lt;jb-table-widget :table=&quot;table&quot; :fetch-list-data=&quot;queryList&quot;&gt;&lt;/jb-table-widget&gt;// queryList是 BaseListPage里的方法TypeScript vue文件的js部分 1234567import Course from &#x27;@/api&#x27;export default&#123; //api管理 apiManager: &#123; api: Course, listFunc: &quot;getPage&quot;, &#125;, //表格配置 table: &#123; tableData: [], //表格列的配置 columnConfigs: [ &#123; label: &quot;列标题&quot;, prop: &quot;id&quot;, attrs: &#123; align: &quot;center&quot;, width: 150 &#125;, &#125;, ], &#125;&#125;TypeScript table属性说明 tableData: Array类型(对象数组), 数据源 columnConfigs：表格列的配置，包括以下属性 label: String类型，列标题 prop: tableData每个元素的对象属性名(比如id, name)，当使用自定义组件时，这个值无效； attrs: 会直接填在标签的属性上 listeners: 监听的事件 component: 自定义组件，包括name、attrs、attrsStatic、listeners四个属性、需要在beforeMount选项全局注册） name: String类型，注册的组件名 attrs: Object类型，键是组件的prop，值是tableData的属性 attrsStatic: Object类型，当无需tableData的数据时使用，键是组件的prop，值会原封不动的传入组件 listeners： 监听组件事件 组件的功能描述 继承关系继承于：BaseListPage + 添加网页链接 显示样式一显示效果： + 上传图片 代码示例： 1234567&lt;template&gt; &lt;jb-table-widget :table=&quot;table&quot; :fetch-list-data=&quot;queryList&quot;&gt;&lt;/jb-table-widget&gt;&lt;/template&gt;Plain Text 1234567// js 部分， 下面代码写在vue的 data()&#123; return &#123;//写在这里...&#125; &#125;// 以下是例子 table: &#123; tableData: [], columnConfigs: [ &#123; label: &quot;课程ID&quot;, prop: &quot;id&quot;, attrs: &#123; align: &quot;center&quot;, width: 150 &#125;, &#125;, &#123; label: &quot;课程信息&quot;, prop: &quot;&quot;, attrs: &#123; align: &quot;center&quot;, minWidth: 300 &#125;, component: &#123; name: &quot;slot-course&quot;, attrs: &#123; avatar: &quot;coverUrls&quot;, rightTopStr: &quot;title&quot;, &#125;, &#125;, &#125;, &#123; label: &quot;学期归属&quot;, prop: &quot;&quot;, attrs: &#123; width: 230, align: &quot;center&quot; &#125;, component: &#123; name: &quot;term-type&quot;, attrs: &#123; termType: &quot;termType&quot;, &#125;, &#125;, &#125;, &#123; label: &quot;是否上架&quot;, prop: &quot;&quot;, attrs: &#123;&#125;, component: &#123; name: &quot;switch-state&quot;, attrs: &#123; id: &quot;id&quot;, value: &quot;isDisabled&quot;, row: &quot;&quot;, &#125;, attrsStatic: &#123; buttons: [ &#123; label: &quot;课程&quot;, open: false, emitEvent: &quot;change&quot;, &#125;, ], type: false, &#125;, listeners: &#123; change: _.debounce( async (bol, id) =&gt; &#123; console.log(bol, id, &quot;点击&quot;); if (bol) &#123; console.log(&quot;上架&quot;); await Course.onShelf(id).then((res) =&gt; &#123; this.show(res.message); &#125;); &#125; else &#123; console.log(&quot;下架&quot;); await Course.offShelf(id).then((res) =&gt; &#123; this.show(res.message); &#125;); &#125; console.log(123); await this.getTabs(); this.isDisabled = false; _self.queryList(); // console.log(this.table.columnConfigs.attrsStatic); // await this.$nextTick(() =&gt; &#123;&#125;); &#125;, 250, &#123; maxWait: 1000 &#125; ), &#125;, &#125;, &#125;, &#123; label: &quot;操作&quot;, attrs: &#123; minWidth: 260, fixed: &quot;right&quot;, align: &quot;center&quot; &#125;, prop: &quot;&quot;, component: &#123; name: &quot;btn-operate&quot;, attrs: &#123; row: &quot;&quot;, isDisabled: &quot;isDisabled&quot;, hid: &quot;hid&quot; &#125;, attrsStatic: &#123; buttons: [ &#123; label: &quot;编辑&quot;, emitEvent: &quot;edit&quot;, class: [&quot;color-blue&quot;] &#125;, &#123; label: &quot;删除&quot;, emitEvent: &quot;delete&quot;, class: [&quot;color-red&quot;], &#125;, ], &#125;, listeners: &#123; edit: (row) =&gt; &#123; console.log(&quot;编辑&quot;); this.onEdit(row.id); &#125;, delete: (row) =&gt; &#123; this.deleteCourseDialog = true; this.deleteCourseId = row.id; &#125;, &#125;, &#125;, &#125;, ], paginate: &#123; isShow: true, page: 1, pageSize: 15, total: 0, &#125;, &#125;JavaScript Attributes 参数 说明 类型 data 表格数据源 array columnConfigs 表格列配置 array: columnConfig cssStyle 表格样式 paginate 分页配置 fetch function columnConfig 属性 说明 类型 可选值 默认值 label prop component 自定义组件名称 paginate 属性 说明 类型 可选值 默认值 isShow page pageSize totoal Events 事件名称 说明 回调参数 Methods 方法名 说明 参数 fetchListData"},{"title":"","date":"2022-01-16T06:56:33.462Z","updated":"2022-01-06T08:10:51.074Z","comments":true,"path":"thinking/vim.html","permalink":"http://example.com/thinking/vim.html","excerpt":"","text":"gg:移动到文件第一个字符； d: 删除 ； G：文件末尾 删除全部内容: ggdG 内容对齐：gg=G 移动到行首：^ 移动到行尾：$ 搜索关键词: /内容 删除xx行至xx行: 1,10d w:到下一个单词的开头 e:到下一个单词的结尾 *：匹配光标在当前所在的单词，移动光标到下一个 使用n|N上下选择 #：移动光标到上一个 使用n|N上下选择"},{"title":"","date":"2022-01-13T16:20:44.382Z","updated":"2021-07-26T13:55:56.627Z","comments":true,"path":"thinking/typescript.html","permalink":"http://example.com/thinking/typescript.html","excerpt":"","text":"粗略了解TypeScript语法开发环境轻量服务器：npm install lite-server –save-dev 接口1. 对变量使用123456789interface User &#123; name: string; age: nubmer;&#125;const user: User &#123; name: &#x27;千条哥&#x27;, age: 45,&#125; 2. 对函数返回值使用123function getUser(): User &#123;//...&#125; Composing types1type MyBool = true | false 泛型 Generics123456789type StringArray = Array&lt;string&gt;;type ObjectWithNameArray = Array&lt;&#123; name: string &#125;&gt;;interface Backpack&lt;Type&gt; &#123; add: (obj: Type) =&gt; void; get: () =&gt; Type;&#125;declare const backpack: Backpack&lt;string&gt;;const object = backpack.get()"},{"title":"","date":"2022-01-13T16:20:32.772Z","updated":"2021-07-26T13:55:56.627Z","comments":true,"path":"thinking/vue2.html","permalink":"http://example.com/thinking/vue2.html","excerpt":"","text":"Vue2原理数据驱动核心点1. Object.defineProperty 拦截属性2. diff算法下的keyObject.defineProperty 拦截属性a. 简单实现数据驱动视图1234567891011121314151617181920212223242526272829303132333435363738394041//监听对象const observe = function (target) &#123; if (typeof target !== &#x27;object&#x27; || target === null) &#123; return &#125; Object.keys(target).forEach(key =&gt; &#123; defineProp(target, key, target[key]) &#125;)&#125;//修改属性值时拦截对象，并更新视图const defineProp = function (target, prop, value) &#123; observe(value) Object.defineProperty(target, prop, &#123; get() &#123; return value; &#125;, set(newValue) &#123; if(value !== newValue)&#123; observe(newValue) value = newValue updateView() &#125; &#125; &#125;)&#125;//更新视图const updateView = function () &#123; console.log(&quot;updateView&quot;)&#125;// model层let data = &#123; name: &#x27;feng&#x27;, school: &#123; name: &#x27;beautiful school&#x27; &#125;&#125;//监听 dataobserve(data) 初步完成一个数据驱动视图，过程： 递归遍历data属性，如果是object类型，则遍历所有属性，对象的属性使用Object.defineProperty拦截处理，当set新值时更新视图。缺点： Object.defineProperty只能拦截属性，data没有的属性，调用observe之后，无法监听； 对象层级太多时，递归计算量大； 下面添加自定义数组监听，数组操作，1234567let customArray = Object.create(Array.prototype);[&#x27;push&#x27;, &#x27;pop&#x27;].forEach(method =&gt; &#123; customArray[method] = function () &#123; updateView() Array.prototype[method].call(this, ...arguments) &#125;&#125;) observe方法让 数组类型 继承自定义数组12345678910111213const observe = function (target) &#123; if (typeof target !== &#x27;object&#x27; || target === null) &#123; return &#125; if (Array.isArray(target)) &#123; target.__proto__ = customArray; &#125; Object.keys(target).forEach(key =&gt; &#123; defineProp(target, key, target[key]) &#125;)&#125; 2. diff算法下的key核心：diff算法中通过tag和key判断是否sameNode，减少渲染次数，提高性能。3.vue-router两种模式的原理hash: 监听；如何改变路由 history: 使用这种模式的要求；监听；前进；"},{"title":"tags","date":"2022-01-09T10:06:05.000Z","updated":"2022-01-09T10:09:11.696Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2022-01-13T16:20:36.824Z","updated":"2021-07-26T13:55:56.627Z","comments":true,"path":"thinking/vue3.html","permalink":"http://example.com/thinking/vue3.html","excerpt":"","text":"vue3.x 新特性一、setup + 组合式api + jsx优点：在setup闭包内，不需要this，引用清晰。组合式api复用更加灵活。 二、tree-sharking(死代码消除)可减少vue体积 尝试了解其原理 三、 各种api的用法12345678import &#123; createApp &#125; from &#x27;vue&#x27;const app = createApp(&#123;&#125;)app.componentapp.directiveapp.mixin app.useapp.configapp.provide 1234567891011121314151617181920212223import &#123; defineComponent &#125; from &#x27;vue&#x27;import &#123; ref, onMounted &#125; from &#x27;vue&#x27;import &#123; toRefs,computed, watch &#125; from &#x27;vue&#x27;&lt;script lang=&quot;ts&quot;&gt;import &#123; computed, defineComponent &#125; from &#x27;vue&#x27;export default defineComponent(&#123; props: (&#123; msg: String &#125; as unknown) as undefined, setup(props: &#123; msg: string &#125;) &#123; const computedMsg = computed(() =&gt; props.msg + &#x27;!!!&#x27;) return &#123; computedMsg, &#125; &#125;&#125;)&lt;/script&gt; watchEffect会自动监听函数内的ref、reactive引用。 四、函数式组件12345678import &#123; h &#125; from &#x27;vue&#x27;const DynamicHeading = (props, context) =&gt; &#123; return h(`h$&#123;props.level&#125;`, context.attrs, context.slots)&#125;DynamicHeading.props = [&#x27;level&#x27;]export default DynamicHeading 五、片段(支持多个根节点，注意：非 Prop 的 Attribute）禁用 attribute 继承的常见情况是需要将 attribute 应用于根节点之外的其他元素。 1inheritAttrs:false //传给组件的 非props、v-on 也和props一起传到组件的$attrs属性 六、Teleport123456789101112&lt;teleport to=&quot;#modals&quot;&gt; &lt;div&gt;A&lt;/div&gt;&lt;/teleport&gt;&lt;teleport to=&quot;#modals&quot;&gt; &lt;div&gt;B&lt;/div&gt;&lt;/teleport&gt;&lt;!-- result--&gt;&lt;div id=&quot;modals&quot;&gt; &lt;div&gt;A&lt;/div&gt; &lt;div&gt;B&lt;/div&gt;&lt;/div&gt; 七、 v-model支持定义修饰符、支持多v-model 八、setup接受两个参数： props: 传入定义的props context: 包含 attrs、slots和emit 三个对象"},{"title":"","date":"2022-01-13T16:20:40.752Z","updated":"2021-07-26T13:55:56.628Z","comments":true,"path":"thinking/webpack-plugin-dll.html","permalink":"http://example.com/thinking/webpack-plugin-dll.html","excerpt":"","text":"DllPlugin+DllReferencePlugin实现动态库将不需要变化的第三方库打包成js文件独立出来通过manifest.json维护。 使用：先使用dllplugin插件打包：dll.js和manifest.json文件12345678910111213141516171819202122232425262728293031323334//webpack.dll.js 配置文件const path = require(&#x27;path&#x27;)const DllPlugin = require(&#x27;webpack/lib/DllPlugin&#x27;)const &#123;srcPath, distPath&#125; = require(&#x27;./paths&#x27;)module.exports = &#123; mode: &#x27;development&#x27;, // JS 执行入口文件 entry: &#123; // 把 多个 相关模块的放到一个单独的动态链接库 vendor: [&#x27;vue&#x27;, &#x27;element-ui&#x27;, &#x27;vue-router&#x27;, &#x27;axios&#x27;, &#x27;lodash&#x27;, &#x27;vuex&#x27;, &#x27;vue2-transitions&#x27;, &#x27;moment&#x27;, &#x27;echarts&#x27;, &#x27;ali-oss&#x27;] &#125;, output: &#123; // 输出的动态链接库的文件名称，[name] 代表当前动态链接库的名称， // 也就是 entry 中配置的 react 和 polyfill filename: &#x27;[name].dll.js&#x27;, // 输出的文件都放到 dist 目录下 path: distPath, // 存放动态链接库的全局变量名称，例如对应 vendor 来说就是 vendor__lib__ // 之所以在前面加上 __lib__ 是为了防止全局变量冲突 library: &#x27;[name]__lib__&#x27;, &#125;, plugins: [ // 接入 DllPlugin new DllPlugin(&#123; // 动态链接库的全局变量名称，需要和 output.library 中保持一致 // 该字段的值也就是输出的 manifest.json 文件 中 name 字段的值 // 例如 vendor.manifest.json 中就有 &quot;name&quot;: &quot;vendor__lib__&quot; name: &#x27;[name]__lib__&#x27;, // 描述动态链接库的 manifest.json 文件输出时的文件名称 path: path.join(distPath, &#x27;[name].manifest.json&#x27;), &#125;), ],&#125; 1使用webpack --config webpack.dll.js 命令打包 vue.config.js文件中使用DllReferencePlugin插件 12345678910111213141516171819202122// 第一，引入 DllReferencePluginconst DllReferencePlugin = require(&#x27;webpack/lib/DllReferencePlugin&#x27;);const webpack = require(&#x27;webpack&#x27;)const path = require(&#x27;path&#x27;)const &#123; srcPath, distPath &#125; = require(&#x27;./paths&#x27;)const manifest = require(&#x27;./dist/vendor.manifest.json&#x27;);module.exports = &#123; configureWebpack: &#123; plugins: [ new webpack.DefinePlugin(&#123; // window.ENV = &#x27;production&#x27; ENV: JSON.stringify(&#x27;development&#x27;) &#125;), // 第三，告诉 Webpack 使用了哪些动态链接库 new DllReferencePlugin(&#123; // 描述 动态链接库的文件内容 manifest &#125;), ] &#125;&#125; 最后需要在js或者index.html中引用vendor.dll.js文件"},{"title":"","date":"2022-01-13T16:20:43.416Z","updated":"2021-07-26T13:55:56.628Z","comments":true,"path":"thinking/webpack.html","permalink":"http://example.com/thinking/webpack.html","excerpt":"","text":"Webpack优化 打包文件名contentHash: 根据文件内容形成的hash，如果内容不变hash值不变，命中缓存时不会重新加载。 css抽离为什么要抽离？因为css文件内容并不经常变，抽离之后有利与缓存，加载网页的速度。 默认打包过程：css-loader –&gt; style-loader； style-loader会将css放到 网页的style标签里； MiniExtractPlugin插件抽离到css文件中； css压缩 TerserJSPlugin + OptimizeCSSAssetsPlugin css跨浏览器兼容使用postcss-loader处理css 第三方库用cdn代替，减少打包的体积webpack中配置externals，一般用key-value的方式配置，左边是导入模块的名称（比如element-ui)，右边是cdn链接产生的全局变量（比如 ELEMENT） 使用splitChunks分割大小 webpackChunkName 注释分割1例子：/* webpackChunkName: &quot;userDetail&quot;*/ 插件使用集合 DllPlugin+DllReferencePlugin实现动态库将不需要变化的第三方库打包成js文件独立出来通过manifest.json维护。 使用：先使用dllplugin插件打包：dll.js和manifest.json文件12345678910111213141516171819202122232425262728293031323334//webpack.dll.js 配置文件const path = require(&#x27;path&#x27;)const DllPlugin = require(&#x27;webpack/lib/DllPlugin&#x27;)const &#123;srcPath, distPath&#125; = require(&#x27;./paths&#x27;)module.exports = &#123; mode: &#x27;development&#x27;, // JS 执行入口文件 entry: &#123; // 把 多个 相关模块的放到一个单独的动态链接库 vendor: [&#x27;vue&#x27;, &#x27;element-ui&#x27;, &#x27;vue-router&#x27;, &#x27;axios&#x27;, &#x27;lodash&#x27;, &#x27;vuex&#x27;, &#x27;vue2-transitions&#x27;, &#x27;moment&#x27;, &#x27;echarts&#x27;, &#x27;ali-oss&#x27;] &#125;, output: &#123; // 输出的动态链接库的文件名称，[name] 代表当前动态链接库的名称， // 也就是 entry 中配置的 react 和 polyfill filename: &#x27;[name].dll.js&#x27;, // 输出的文件都放到 dist 目录下 path: distPath, // 存放动态链接库的全局变量名称，例如对应 vendor 来说就是 vendor__lib__ // 之所以在前面加上 __lib__ 是为了防止全局变量冲突 library: &#x27;[name]__lib__&#x27;, &#125;, plugins: [ // 接入 DllPlugin new DllPlugin(&#123; // 动态链接库的全局变量名称，需要和 output.library 中保持一致 // 该字段的值也就是输出的 manifest.json 文件 中 name 字段的值 // 例如 vendor.manifest.json 中就有 &quot;name&quot;: &quot;vendor__lib__&quot; name: &#x27;[name]__lib__&#x27;, // 描述动态链接库的 manifest.json 文件输出时的文件名称 path: path.join(distPath, &#x27;[name].manifest.json&#x27;), &#125;), ],&#125; 1使用webpack --config webpack.dll.js 命令打包 vue.config.js文件中使用DllReferencePlugin插件 12345678910111213141516171819202122// 第一，引入 DllReferencePluginconst DllReferencePlugin = require(&#x27;webpack/lib/DllReferencePlugin&#x27;);const webpack = require(&#x27;webpack&#x27;)const path = require(&#x27;path&#x27;)const &#123; srcPath, distPath &#125; = require(&#x27;./paths&#x27;)const manifest = require(&#x27;./dist/vendor.manifest.json&#x27;);module.exports = &#123; configureWebpack: &#123; plugins: [ new webpack.DefinePlugin(&#123; // window.ENV = &#x27;production&#x27; ENV: JSON.stringify(&#x27;development&#x27;) &#125;), // 第三，告诉 Webpack 使用了哪些动态链接库 new DllReferencePlugin(&#123; // 描述 动态链接库的文件内容 manifest &#125;), ] &#125;&#125; 最后需要在js或者index.html中引用vendor.dll.js文件"},{"title":"","date":"2022-01-17T12:37:43.710Z","updated":"2022-01-17T07:56:37.760Z","comments":true,"path":"thinking/命令行.html","permalink":"http://example.com/thinking/%E5%91%BD%E4%BB%A4%E8%A1%8C.html","excerpt":"","text":"占用端口：lsof -i:8000 关闭进程： kill 进程号 Mysql: service mysqld start (5.0版本是mysqld) service mysql start service mysql restart 系统命令行短链接设置: alias mysql=/usr/local/mysql/bin/mysql Docker: ip:地址： 进入容器后， cat /etc/hosts 1docker inspect --format=&#x27;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&#x27; cd30dbb10151 1CHANGE MASTER TO MASTER_HOST=&#x27;172.17.0.3&#x27;, MASTER_PORT=3306,MASTER_USER=&#x27;repl&#x27;,MASTER_PASSWORD=&#x27;123456&#x27;, master_log_file=&#x27;mysql-bin.000007&#x27;, master_log_pos=323, get_master_public_key=1; mysql 8.0之后加上这句配置：get_master_public_key=1; 1docker run -itd --name s2-sql -p 3336:3306 -e MYSQL_ROOT_PASSWORD=123456 amd64/mysql"},{"title":"","date":"2022-01-13T16:20:46.911Z","updated":"2021-12-30T08:54:12.794Z","comments":true,"path":"thinking/git.html","permalink":"http://example.com/thinking/git.html","excerpt":"","text":"git update-index –assume-unchanged /path/to/file #忽略跟踪 git update-index –no-assume-unchanged /path/to/file #恢复跟踪 git reset –hard HEAD^ 拉取服务器最近一次提交到暂存"},{"title":"","date":"2022-01-10T06:29:54.232Z","updated":"2021-07-26T13:55:56.628Z","comments":true,"path":"thinking/数据结构.html","permalink":"http://example.com/thinking/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html","excerpt":"","text":"关于sort排序，怎么快速确定升序与降序sort方法传入 (s, f) =&gt; {return f - s} 对比的两个数字中，s是后面的那个，f是第一个。 上面返回值中，谁在后一位则代表重哪端开始，正序排序"},{"title":"","date":"2022-01-13T16:20:51.473Z","updated":"2021-10-29T06:45:35.696Z","comments":true,"path":"thinking/最近快捷键.html","permalink":"http://example.com/thinking/%E6%9C%80%E8%BF%91%E5%BF%AB%E6%8D%B7%E9%94%AE.html","excerpt":"","text":"idea窗口切换: option + shift + command + ~ 光标历史切换： option + command + 方向左 清除没有用的import: control + option + o ​"},{"title":"","date":"2021-07-26T13:55:56.627Z","updated":"2021-07-26T13:55:56.627Z","comments":true,"path":"draft/javascript.html","permalink":"http://example.com/draft/javascript.html","excerpt":"","text":"javascript框架基础知识一、this的几种指向 在严格模式下自执行函数指向undefined 非严格模式指向自执行函数指向window所以可以用这么判断当前环境是否严格模式 1(function()&#123;return !this&#125;()) 在一个函数a里面定义一个函数b，然后在a函数里调用这个函数b，此时this指向跟自执行函数一样 二、new操作做了什么模拟new的过程: 123456789101112131415const create = function(ClassName, ...args) &#123; //让instant.prototype指向ClassName.prototype，缺少这一步新建的实例就没有ClassName原型 let instant = Object.create(ClassName.prototype) ClassName.apply(instant, args) return instant;&#125;const Dragon = function(name) &#123; this.name = name;&#125;Dragon.prototype.sounds = &#x27;吼吼吼...&#x27;let dragon = create(Dragon, &#x27;小明&#x27;) dragon.name //小明dragon.sounds //吼吼吼... 三，Prototype定义：每个对象都会有prototype，prototype指向一个对象，类似于java的静态变量继承。 为什么会有prototype？ 一切都是为了复用和解藕，所有实例共享一个对象a，a对象是所有实例都需要且一样的。 实例怎么指向原型。 12obj.__proto__obj.constructor.prototype 四，原型链由于prototype指向一个对象。而js对象都会有自己的原型，对象原型＞对象＞对象原型＞对象…，因此形成了原型链。 1. 原型链的尽头是什么呢每个对象的原型链末端都会经过Object.prototype，而Object.prototype＝undefined。Object.getPrototypeOf(Object.prototype)结果为null Object.prototype不能够被赋值, 会报错 instanceof判断对象是否属于某个构造器。 [^注意]: 1. 只要一个对象的原型不是null，instanceof运算符的判断就不会失真；2. 对于undefined和null，instanceOf运算符总是返回false； 3. instanceof不适用原始类型的值。 12345var s = &#x27;hello&#x27;;s instanceof String // falseundefined instanceof Object // falsenull instanceof Object // falsethis instanceof ClassName //用于判断是否new出来的"},{"title":"","date":"2022-01-06T09:59:39.757Z","updated":"2022-01-06T09:59:39.741Z","comments":true,"path":"thinking/登录过程.html","permalink":"http://example.com/thinking/%E7%99%BB%E5%BD%95%E8%BF%87%E7%A8%8B.html","excerpt":"","text":"登录后怎么确认登陆状态"},{"title":"","date":"2022-01-13T16:20:53.327Z","updated":"2022-01-13T16:16:49.549Z","comments":true,"path":"thinking/英语.html","permalink":"http://example.com/thinking/%E8%8B%B1%E8%AF%AD.html","excerpt":"","text":"数组类型(GenericArrayType) 参数化类型(ParameterizedType) 类型变量(TypeVariable) 通配符类型(WildcardType) 保留一切权利 all right reserved"},{"title":"","date":"2021-07-26T13:55:56.626Z","updated":"2021-07-26T13:55:56.626Z","comments":true,"path":"demo/ts/genericsDemo.js","permalink":"http://example.com/demo/ts/genericsDemo.js","excerpt":"","text":"var MyNamed = /** @class */ (function () { function MyNamed() { } return MyNamed; }()); function findByName(x) { // TODO: Implement return undefined; } var x; var y = findByName(x); // expected y: string, got y: {} console.log(y, 111);"},{"title":"","date":"2021-07-26T13:55:56.627Z","updated":"2021-07-26T13:55:56.627Z","comments":true,"path":"demo/ts/package.json","permalink":"http://example.com/demo/ts/package.json","excerpt":"","text":"{\"name\":\"ts\",\"version\":\"1.0.0\",\"description\":\"\",\"main\":\"genericsDemo.js\",\"scripts\":{\"test\":\"echo \\\"Error: no test specified\\\" && exit 1\"},\"author\":\"\",\"license\":\"ISC\",\"devDependencies\":{\"lite-server\":\"^2.6.1\"}}"},{"title":"","date":"2021-07-26T13:55:56.627Z","updated":"2021-07-26T13:55:56.627Z","comments":true,"path":"demo/ts/package-lock.json","permalink":"http://example.com/demo/ts/package-lock.json","excerpt":"","text":"{\"name\":\"ts\",\"version\":\"1.0.0\",\"lockfileVersion\":1,\"requires\":true,\"dependencies\":{\"accepts\":{\"version\":\"1.3.7\",\"resolved\":\"https://registry.npmjs.org/accepts/-/accepts-1.3.7.tgz\",\"integrity\":\"sha512-Il80Qs2WjYlJIBNzNkK6KYqlVMTbZLXgHx2oT0pU/fjRHyEp+PEfEPY0R3WCwAGVOtauxh1hOxNgIf5bv7dQpA==\",\"dev\":true,\"requires\":{\"mime-types\":\"~2.1.24\",\"negotiator\":\"0.6.2\"}},\"after\":{\"version\":\"0.8.2\",\"resolved\":\"https://registry.npmjs.org/after/-/after-0.8.2.tgz\",\"integrity\":\"sha1-/ts5T58OAqqXaOcCvaI7UF+ufh8=\",\"dev\":true},\"ansi-regex\":{\"version\":\"2.1.1\",\"resolved\":\"https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz\",\"integrity\":\"sha1-w7M6te42DYbg5ijwRorn7yfWVN8=\",\"dev\":true},\"ansi-styles\":{\"version\":\"2.2.1\",\"resolved\":\"https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz\",\"integrity\":\"sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=\",\"dev\":true},\"anymatch\":{\"version\":\"3.1.2\",\"resolved\":\"https://registry.npmjs.org/anymatch/-/anymatch-3.1.2.tgz\",\"integrity\":\"sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==\",\"dev\":true,\"requires\":{\"normalize-path\":\"^3.0.0\",\"picomatch\":\"^2.0.4\"}},\"arraybuffer.slice\":{\"version\":\"0.0.7\",\"resolved\":\"https://registry.npmjs.org/arraybuffer.slice/-/arraybuffer.slice-0.0.7.tgz\",\"integrity\":\"sha512-wGUIVQXuehL5TCqQun8OW81jGzAWycqzFF8lFp+GOM5BXLYj3bKNsYC4daB7n6XjCqxQA/qgTJ+8ANR3acjrog==\",\"dev\":true},\"async\":{\"version\":\"1.5.2\",\"resolved\":\"https://registry.npmjs.org/async/-/async-1.5.2.tgz\",\"integrity\":\"sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo=\",\"dev\":true},\"async-each-series\":{\"version\":\"0.1.1\",\"resolved\":\"https://registry.npmjs.org/async-each-series/-/async-each-series-0.1.1.tgz\",\"integrity\":\"sha1-dhfBkXQB/Yykooqtzj266Yr+tDI=\",\"dev\":true},\"axios\":{\"version\":\"0.21.1\",\"resolved\":\"https://registry.npmjs.org/axios/-/axios-0.21.1.tgz\",\"integrity\":\"sha512-dKQiRHxGD9PPRIUNIWvZhPTPpl1rf/OxTYKsqKUDjBwYylTvV7SjSHJb9ratfyzM6wCdLCOYLzs73qpg5c4iGA==\",\"dev\":true,\"requires\":{\"follow-redirects\":\"^1.10.0\"}},\"backo2\":{\"version\":\"1.0.2\",\"resolved\":\"https://registry.npmjs.org/backo2/-/backo2-1.0.2.tgz\",\"integrity\":\"sha1-MasayLEpNjRj41s+u2n038+6eUc=\",\"dev\":true},\"balanced-match\":{\"version\":\"1.0.2\",\"resolved\":\"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\"integrity\":\"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\"dev\":true},\"base64-arraybuffer\":{\"version\":\"0.1.4\",\"resolved\":\"https://registry.npmjs.org/base64-arraybuffer/-/base64-arraybuffer-0.1.4.tgz\",\"integrity\":\"sha1-mBjHngWbE1X5fgQooBfIOOkLqBI=\",\"dev\":true},\"base64id\":{\"version\":\"2.0.0\",\"resolved\":\"https://registry.npmjs.org/base64id/-/base64id-2.0.0.tgz\",\"integrity\":\"sha512-lGe34o6EHj9y3Kts9R4ZYs/Gr+6N7MCaMlIFA3F1R2O5/m7K06AxfSeO5530PEERE6/WyEg3lsuyw4GHlPZHog==\",\"dev\":true},\"batch\":{\"version\":\"0.6.1\",\"resolved\":\"https://registry.npmjs.org/batch/-/batch-0.6.1.tgz\",\"integrity\":\"sha1-3DQxT05nkxgJP8dgJyUl+UvyXBY=\",\"dev\":true},\"binary-extensions\":{\"version\":\"2.2.0\",\"resolved\":\"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz\",\"integrity\":\"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\",\"dev\":true},\"blob\":{\"version\":\"0.0.5\",\"resolved\":\"https://registry.npmjs.org/blob/-/blob-0.0.5.tgz\",\"integrity\":\"sha512-gaqbzQPqOoamawKg0LGVd7SzLgXS+JH61oWprSLH+P+abTczqJbhTR8CmJ2u9/bUYNmHTGJx/UEmn6doAvvuig==\",\"dev\":true},\"brace-expansion\":{\"version\":\"1.1.11\",\"resolved\":\"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\"integrity\":\"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\"dev\":true,\"requires\":{\"balanced-match\":\"^1.0.0\",\"concat-map\":\"0.0.1\"}},\"braces\":{\"version\":\"3.0.2\",\"resolved\":\"https://registry.npmjs.org/braces/-/braces-3.0.2.tgz\",\"integrity\":\"sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==\",\"dev\":true,\"requires\":{\"fill-range\":\"^7.0.1\"}},\"browser-sync\":{\"version\":\"2.27.4\",\"resolved\":\"https://registry.npmjs.org/browser-sync/-/browser-sync-2.27.4.tgz\",\"integrity\":\"sha512-zgjrI6oUXxLa671SxVmWfIH+XiG6yZiGuvsQ1huuGEBlKkWuBVKgYjh+j9kagKm891FARgmK4Ct4PAhckLKaYg==\",\"dev\":true,\"requires\":{\"browser-sync-client\":\"^2.27.4\",\"browser-sync-ui\":\"^2.27.4\",\"bs-recipes\":\"1.3.4\",\"bs-snippet-injector\":\"^2.0.1\",\"chokidar\":\"^3.5.1\",\"connect\":\"3.6.6\",\"connect-history-api-fallback\":\"^1\",\"dev-ip\":\"^1.0.1\",\"easy-extender\":\"^2.3.4\",\"eazy-logger\":\"3.1.0\",\"etag\":\"^1.8.1\",\"fresh\":\"^0.5.2\",\"fs-extra\":\"3.0.1\",\"http-proxy\":\"^1.18.1\",\"immutable\":\"^3\",\"localtunnel\":\"^2.0.1\",\"micromatch\":\"^4.0.2\",\"opn\":\"5.3.0\",\"portscanner\":\"2.1.1\",\"qs\":\"6.2.3\",\"raw-body\":\"^2.3.2\",\"resp-modifier\":\"6.0.2\",\"rx\":\"4.1.0\",\"send\":\"0.16.2\",\"serve-index\":\"1.9.1\",\"serve-static\":\"1.13.2\",\"server-destroy\":\"1.0.1\",\"socket.io\":\"2.4.0\",\"ua-parser-js\":\"^0.7.28\",\"yargs\":\"^15.4.1\"}},\"browser-sync-client\":{\"version\":\"2.27.4\",\"resolved\":\"https://registry.npmjs.org/browser-sync-client/-/browser-sync-client-2.27.4.tgz\",\"integrity\":\"sha512-l0krAGZnpLaD+tUYdM25WeS4FP73ZoPeaxlVzOvmtL9uKSlvpmywsnDwa3PJzc3ubmDPAcD74ifJjl6MmVksXw==\",\"dev\":true,\"requires\":{\"etag\":\"1.8.1\",\"fresh\":\"0.5.2\",\"mitt\":\"^1.1.3\",\"rxjs\":\"^5.5.6\"}},\"browser-sync-ui\":{\"version\":\"2.27.4\",\"resolved\":\"https://registry.npmjs.org/browser-sync-ui/-/browser-sync-ui-2.27.4.tgz\",\"integrity\":\"sha512-E58Mb6ycz57Nm393oqVJj4jxuLJH3MhZnY8AV+zd9LsNVGZjrKRNNIw5JPYYguyb37ZjLjq2x4u+38mRv3Sb7g==\",\"dev\":true,\"requires\":{\"async-each-series\":\"0.1.1\",\"connect-history-api-fallback\":\"^1\",\"immutable\":\"^3\",\"server-destroy\":\"1.0.1\",\"socket.io-client\":\"^2.4.0\",\"stream-throttle\":\"^0.1.3\"}},\"bs-recipes\":{\"version\":\"1.3.4\",\"resolved\":\"https://registry.npmjs.org/bs-recipes/-/bs-recipes-1.3.4.tgz\",\"integrity\":\"sha1-DS1NSKcYyMBEdp/cT4lZLci2lYU=\",\"dev\":true},\"bs-snippet-injector\":{\"version\":\"2.0.1\",\"resolved\":\"https://registry.npmjs.org/bs-snippet-injector/-/bs-snippet-injector-2.0.1.tgz\",\"integrity\":\"sha1-YbU5PxH1JVntEgaTEANDtu2wTdU=\",\"dev\":true},\"bytes\":{\"version\":\"3.1.0\",\"resolved\":\"https://registry.npmjs.org/bytes/-/bytes-3.1.0.tgz\",\"integrity\":\"sha512-zauLjrfCG+xvoyaqLoV8bLVXXNGC4JqlxFCutSDWA6fJrTo2ZuvLYTqZ7aHBLZSMOopbzwv8f+wZcVzfVTI2Dg==\",\"dev\":true},\"camelcase\":{\"version\":\"5.3.1\",\"resolved\":\"https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz\",\"integrity\":\"sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==\",\"dev\":true},\"chalk\":{\"version\":\"1.1.3\",\"resolved\":\"https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz\",\"integrity\":\"sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=\",\"dev\":true,\"requires\":{\"ansi-styles\":\"^2.2.1\",\"escape-string-regexp\":\"^1.0.2\",\"has-ansi\":\"^2.0.0\",\"strip-ansi\":\"^3.0.0\",\"supports-color\":\"^2.0.0\"}},\"chokidar\":{\"version\":\"3.5.2\",\"resolved\":\"https://registry.npmjs.org/chokidar/-/chokidar-3.5.2.tgz\",\"integrity\":\"sha512-ekGhOnNVPgT77r4K/U3GDhu+FQ2S8TnK/s2KbIGXi0SZWuwkZ2QNyfWdZW+TVfn84DpEP7rLeCt2UI6bJ8GwbQ==\",\"dev\":true,\"requires\":{\"anymatch\":\"~3.1.2\",\"braces\":\"~3.0.2\",\"fsevents\":\"~2.3.2\",\"glob-parent\":\"~5.1.2\",\"is-binary-path\":\"~2.1.0\",\"is-glob\":\"~4.0.1\",\"normalize-path\":\"~3.0.0\",\"readdirp\":\"~3.6.0\"}},\"cliui\":{\"version\":\"7.0.4\",\"resolved\":\"https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz\",\"integrity\":\"sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==\",\"dev\":true,\"requires\":{\"string-width\":\"^4.2.0\",\"strip-ansi\":\"^6.0.0\",\"wrap-ansi\":\"^7.0.0\"},\"dependencies\":{\"ansi-regex\":{\"version\":\"5.0.0\",\"resolved\":\"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz\",\"integrity\":\"sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==\",\"dev\":true},\"strip-ansi\":{\"version\":\"6.0.0\",\"resolved\":\"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz\",\"integrity\":\"sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==\",\"dev\":true,\"requires\":{\"ansi-regex\":\"^5.0.0\"}}}},\"color-convert\":{\"version\":\"2.0.1\",\"resolved\":\"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\"integrity\":\"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\"dev\":true,\"requires\":{\"color-name\":\"~1.1.4\"}},\"color-name\":{\"version\":\"1.1.4\",\"resolved\":\"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\"integrity\":\"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\"dev\":true},\"commander\":{\"version\":\"2.20.3\",\"resolved\":\"https://registry.npmjs.org/commander/-/commander-2.20.3.tgz\",\"integrity\":\"sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==\",\"dev\":true},\"component-bind\":{\"version\":\"1.0.0\",\"resolved\":\"https://registry.npmjs.org/component-bind/-/component-bind-1.0.0.tgz\",\"integrity\":\"sha1-AMYIq33Nk4l8AAllGx06jh5zu9E=\",\"dev\":true},\"component-emitter\":{\"version\":\"1.3.0\",\"resolved\":\"https://registry.npmjs.org/component-emitter/-/component-emitter-1.3.0.tgz\",\"integrity\":\"sha512-Rd3se6QB+sO1TwqZjscQrurpEPIfO0/yYnSin6Q/rD3mOutHvUrCAhJub3r90uNb+SESBuE0QYoB90YdfatsRg==\",\"dev\":true},\"component-inherit\":{\"version\":\"0.0.3\",\"resolved\":\"https://registry.npmjs.org/component-inherit/-/component-inherit-0.0.3.tgz\",\"integrity\":\"sha1-ZF/ErfWLcrZJ1crmUTVhnbJv8UM=\",\"dev\":true},\"concat-map\":{\"version\":\"0.0.1\",\"resolved\":\"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\"integrity\":\"sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=\",\"dev\":true},\"connect\":{\"version\":\"3.6.6\",\"resolved\":\"https://registry.npmjs.org/connect/-/connect-3.6.6.tgz\",\"integrity\":\"sha1-Ce/2xVr3I24TcTWnJXSFi2eG9SQ=\",\"dev\":true,\"requires\":{\"debug\":\"2.6.9\",\"finalhandler\":\"1.1.0\",\"parseurl\":\"~1.3.2\",\"utils-merge\":\"1.0.1\"},\"dependencies\":{\"debug\":{\"version\":\"2.6.9\",\"resolved\":\"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\"integrity\":\"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\"dev\":true,\"requires\":{\"ms\":\"2.0.0\"}}}},\"connect-history-api-fallback\":{\"version\":\"1.6.0\",\"resolved\":\"https://registry.npmjs.org/connect-history-api-fallback/-/connect-history-api-fallback-1.6.0.tgz\",\"integrity\":\"sha512-e54B99q/OUoH64zYYRf3HBP5z24G38h5D3qXu23JGRoigpX5Ss4r9ZnDk3g0Z8uQC2x2lPaJ+UlWBc1ZWBWdLg==\",\"dev\":true},\"connect-logger\":{\"version\":\"0.0.1\",\"resolved\":\"https://registry.npmjs.org/connect-logger/-/connect-logger-0.0.1.tgz\",\"integrity\":\"sha1-TZmZeKHSC7RgjnzUNNdBZSJVF0s=\",\"dev\":true,\"requires\":{\"moment\":\"*\"}},\"cookie\":{\"version\":\"0.4.1\",\"resolved\":\"https://registry.npmjs.org/cookie/-/cookie-0.4.1.tgz\",\"integrity\":\"sha512-ZwrFkGJxUR3EIoXtO+yVE69Eb7KlixbaeAWfBQB9vVsNn/o+Yw69gBWSSDK825hQNdN+wF8zELf3dFNl/kxkUA==\",\"dev\":true},\"debug\":{\"version\":\"3.1.0\",\"resolved\":\"https://registry.npmjs.org/debug/-/debug-3.1.0.tgz\",\"integrity\":\"sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==\",\"dev\":true,\"requires\":{\"ms\":\"2.0.0\"}},\"decamelize\":{\"version\":\"1.2.0\",\"resolved\":\"https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz\",\"integrity\":\"sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=\",\"dev\":true},\"depd\":{\"version\":\"1.1.2\",\"resolved\":\"https://registry.npmjs.org/depd/-/depd-1.1.2.tgz\",\"integrity\":\"sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=\",\"dev\":true},\"destroy\":{\"version\":\"1.0.4\",\"resolved\":\"https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz\",\"integrity\":\"sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA=\",\"dev\":true},\"dev-ip\":{\"version\":\"1.0.1\",\"resolved\":\"https://registry.npmjs.org/dev-ip/-/dev-ip-1.0.1.tgz\",\"integrity\":\"sha1-p2o+0YVb56ASu4rBbLgPPADcKPA=\",\"dev\":true},\"dlv\":{\"version\":\"1.1.3\",\"resolved\":\"https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz\",\"integrity\":\"sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==\",\"dev\":true},\"easy-extender\":{\"version\":\"2.3.4\",\"resolved\":\"https://registry.npmjs.org/easy-extender/-/easy-extender-2.3.4.tgz\",\"integrity\":\"sha512-8cAwm6md1YTiPpOvDULYJL4ZS6WfM5/cTeVVh4JsvyYZAoqlRVUpHL9Gr5Fy7HA6xcSZicUia3DeAgO3Us8E+Q==\",\"dev\":true,\"requires\":{\"lodash\":\"^4.17.10\"}},\"eazy-logger\":{\"version\":\"3.1.0\",\"resolved\":\"https://registry.npmjs.org/eazy-logger/-/eazy-logger-3.1.0.tgz\",\"integrity\":\"sha512-/snsn2JqBtUSSstEl4R0RKjkisGHAhvYj89i7r3ytNUKW12y178KDZwXLXIgwDqLW6E/VRMT9qfld7wvFae8bQ==\",\"dev\":true,\"requires\":{\"tfunk\":\"^4.0.0\"}},\"ee-first\":{\"version\":\"1.1.1\",\"resolved\":\"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\"integrity\":\"sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=\",\"dev\":true},\"emoji-regex\":{\"version\":\"8.0.0\",\"resolved\":\"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\"integrity\":\"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\"dev\":true},\"encodeurl\":{\"version\":\"1.0.2\",\"resolved\":\"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\"integrity\":\"sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=\",\"dev\":true},\"engine.io\":{\"version\":\"3.5.0\",\"resolved\":\"https://registry.npmjs.org/engine.io/-/engine.io-3.5.0.tgz\",\"integrity\":\"sha512-21HlvPUKaitDGE4GXNtQ7PLP0Sz4aWLddMPw2VTyFz1FVZqu/kZsJUO8WNpKuE/OCL7nkfRaOui2ZCJloGznGA==\",\"dev\":true,\"requires\":{\"accepts\":\"~1.3.4\",\"base64id\":\"2.0.0\",\"cookie\":\"~0.4.1\",\"debug\":\"~4.1.0\",\"engine.io-parser\":\"~2.2.0\",\"ws\":\"~7.4.2\"},\"dependencies\":{\"debug\":{\"version\":\"4.1.1\",\"resolved\":\"https://registry.npmjs.org/debug/-/debug-4.1.1.tgz\",\"integrity\":\"sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==\",\"dev\":true,\"requires\":{\"ms\":\"^2.1.1\"}},\"ms\":{\"version\":\"2.1.3\",\"resolved\":\"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\"integrity\":\"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\"dev\":true}}},\"engine.io-client\":{\"version\":\"3.5.2\",\"resolved\":\"https://registry.npmjs.org/engine.io-client/-/engine.io-client-3.5.2.tgz\",\"integrity\":\"sha512-QEqIp+gJ/kMHeUun7f5Vv3bteRHppHH/FMBQX/esFj/fuYfjyUKWGMo3VCvIP/V8bE9KcjHmRZrhIz2Z9oNsDA==\",\"dev\":true,\"requires\":{\"component-emitter\":\"~1.3.0\",\"component-inherit\":\"0.0.3\",\"debug\":\"~3.1.0\",\"engine.io-parser\":\"~2.2.0\",\"has-cors\":\"1.1.0\",\"indexof\":\"0.0.1\",\"parseqs\":\"0.0.6\",\"parseuri\":\"0.0.6\",\"ws\":\"~7.4.2\",\"xmlhttprequest-ssl\":\"~1.6.2\",\"yeast\":\"0.1.2\"}},\"engine.io-parser\":{\"version\":\"2.2.1\",\"resolved\":\"https://registry.npmjs.org/engine.io-parser/-/engine.io-parser-2.2.1.tgz\",\"integrity\":\"sha512-x+dN/fBH8Ro8TFwJ+rkB2AmuVw9Yu2mockR/p3W8f8YtExwFgDvBDi0GWyb4ZLkpahtDGZgtr3zLovanJghPqg==\",\"dev\":true,\"requires\":{\"after\":\"0.8.2\",\"arraybuffer.slice\":\"~0.0.7\",\"base64-arraybuffer\":\"0.1.4\",\"blob\":\"0.0.5\",\"has-binary2\":\"~1.0.2\"}},\"escalade\":{\"version\":\"3.1.1\",\"resolved\":\"https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz\",\"integrity\":\"sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==\",\"dev\":true},\"escape-html\":{\"version\":\"1.0.3\",\"resolved\":\"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\"integrity\":\"sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=\",\"dev\":true},\"escape-string-regexp\":{\"version\":\"1.0.5\",\"resolved\":\"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\"integrity\":\"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\",\"dev\":true},\"etag\":{\"version\":\"1.8.1\",\"resolved\":\"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\"integrity\":\"sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc=\",\"dev\":true},\"eventemitter3\":{\"version\":\"4.0.7\",\"resolved\":\"https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.7.tgz\",\"integrity\":\"sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==\",\"dev\":true},\"fill-range\":{\"version\":\"7.0.1\",\"resolved\":\"https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz\",\"integrity\":\"sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==\",\"dev\":true,\"requires\":{\"to-regex-range\":\"^5.0.1\"}},\"finalhandler\":{\"version\":\"1.1.0\",\"resolved\":\"https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.0.tgz\",\"integrity\":\"sha1-zgtoVbRYU+eRsvzGgARtiCU91/U=\",\"dev\":true,\"requires\":{\"debug\":\"2.6.9\",\"encodeurl\":\"~1.0.1\",\"escape-html\":\"~1.0.3\",\"on-finished\":\"~2.3.0\",\"parseurl\":\"~1.3.2\",\"statuses\":\"~1.3.1\",\"unpipe\":\"~1.0.0\"},\"dependencies\":{\"debug\":{\"version\":\"2.6.9\",\"resolved\":\"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\"integrity\":\"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\"dev\":true,\"requires\":{\"ms\":\"2.0.0\"}}}},\"find-up\":{\"version\":\"4.1.0\",\"resolved\":\"https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz\",\"integrity\":\"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\",\"dev\":true,\"requires\":{\"locate-path\":\"^5.0.0\",\"path-exists\":\"^4.0.0\"}},\"follow-redirects\":{\"version\":\"1.14.1\",\"resolved\":\"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.1.tgz\",\"integrity\":\"sha512-HWqDgT7ZEkqRzBvc2s64vSZ/hfOceEol3ac/7tKwzuvEyWx3/4UegXh5oBOIotkGsObyk3xznnSRVADBgWSQVg==\",\"dev\":true},\"fresh\":{\"version\":\"0.5.2\",\"resolved\":\"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\"integrity\":\"sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac=\",\"dev\":true},\"fs-extra\":{\"version\":\"3.0.1\",\"resolved\":\"https://registry.npmjs.org/fs-extra/-/fs-extra-3.0.1.tgz\",\"integrity\":\"sha1-N5TzeMWLNC6n27sjCVEJxLO2IpE=\",\"dev\":true,\"requires\":{\"graceful-fs\":\"^4.1.2\",\"jsonfile\":\"^3.0.0\",\"universalify\":\"^0.1.0\"}},\"fsevents\":{\"version\":\"2.3.2\",\"resolved\":\"https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz\",\"integrity\":\"sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==\",\"dev\":true,\"optional\":true},\"get-caller-file\":{\"version\":\"2.0.5\",\"resolved\":\"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\"integrity\":\"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\"dev\":true},\"glob-parent\":{\"version\":\"5.1.2\",\"resolved\":\"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\"integrity\":\"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\"dev\":true,\"requires\":{\"is-glob\":\"^4.0.1\"}},\"graceful-fs\":{\"version\":\"4.2.6\",\"resolved\":\"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.6.tgz\",\"integrity\":\"sha512-nTnJ528pbqxYanhpDYsi4Rd8MAeaBA67+RZ10CM1m3bTAVFEDcd5AuA4a6W5YkGZ1iNXHzZz8T6TBKLeBuNriQ==\",\"dev\":true},\"has-ansi\":{\"version\":\"2.0.0\",\"resolved\":\"https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz\",\"integrity\":\"sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=\",\"dev\":true,\"requires\":{\"ansi-regex\":\"^2.0.0\"}},\"has-binary2\":{\"version\":\"1.0.3\",\"resolved\":\"https://registry.npmjs.org/has-binary2/-/has-binary2-1.0.3.tgz\",\"integrity\":\"sha512-G1LWKhDSvhGeAQ8mPVQlqNcOB2sJdwATtZKl2pDKKHfpf/rYj24lkinxf69blJbnsvtqqNU+L3SL50vzZhXOnw==\",\"dev\":true,\"requires\":{\"isarray\":\"2.0.1\"}},\"has-cors\":{\"version\":\"1.1.0\",\"resolved\":\"https://registry.npmjs.org/has-cors/-/has-cors-1.1.0.tgz\",\"integrity\":\"sha1-XkdHk/fqmEPRu5nCPu9J/xJv/zk=\",\"dev\":true},\"http-errors\":{\"version\":\"1.7.3\",\"resolved\":\"https://registry.npmjs.org/http-errors/-/http-errors-1.7.3.tgz\",\"integrity\":\"sha512-ZTTX0MWrsQ2ZAhA1cejAwDLycFsd7I7nVtnkT3Ol0aqodaKW+0CTZDQ1uBv5whptCnc8e8HeRRJxRs0kmm/Qfw==\",\"dev\":true,\"requires\":{\"depd\":\"~1.1.2\",\"inherits\":\"2.0.4\",\"setprototypeof\":\"1.1.1\",\"statuses\":\">= 1.5.0 < 2\",\"toidentifier\":\"1.0.0\"},\"dependencies\":{\"statuses\":{\"version\":\"1.5.0\",\"resolved\":\"https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz\",\"integrity\":\"sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=\",\"dev\":true}}},\"http-proxy\":{\"version\":\"1.18.1\",\"resolved\":\"https://registry.npmjs.org/http-proxy/-/http-proxy-1.18.1.tgz\",\"integrity\":\"sha512-7mz/721AbnJwIVbnaSv1Cz3Am0ZLT/UBwkC92VlxhXv/k/BBQfM2fXElQNC27BVGr0uwUpplYPQM9LnaBMR5NQ==\",\"dev\":true,\"requires\":{\"eventemitter3\":\"^4.0.0\",\"follow-redirects\":\"^1.0.0\",\"requires-port\":\"^1.0.0\"}},\"iconv-lite\":{\"version\":\"0.4.24\",\"resolved\":\"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\"integrity\":\"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\"dev\":true,\"requires\":{\"safer-buffer\":\">= 2.1.2 < 3\"}},\"immutable\":{\"version\":\"3.8.2\",\"resolved\":\"https://registry.npmjs.org/immutable/-/immutable-3.8.2.tgz\",\"integrity\":\"sha1-wkOZUUVbs5kT2vKBN28VMOEErfM=\",\"dev\":true},\"indexof\":{\"version\":\"0.0.1\",\"resolved\":\"https://registry.npmjs.org/indexof/-/indexof-0.0.1.tgz\",\"integrity\":\"sha1-gtwzbSMrkGIXnQWrMpOmYFn9Q10=\",\"dev\":true},\"inherits\":{\"version\":\"2.0.4\",\"resolved\":\"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\"integrity\":\"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\"dev\":true},\"is-binary-path\":{\"version\":\"2.1.0\",\"resolved\":\"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\"integrity\":\"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\"dev\":true,\"requires\":{\"binary-extensions\":\"^2.0.0\"}},\"is-extglob\":{\"version\":\"2.1.1\",\"resolved\":\"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\"integrity\":\"sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=\",\"dev\":true},\"is-fullwidth-code-point\":{\"version\":\"3.0.0\",\"resolved\":\"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\"integrity\":\"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\"dev\":true},\"is-glob\":{\"version\":\"4.0.1\",\"resolved\":\"https://registry.npmjs.org/is-glob/-/is-glob-4.0.1.tgz\",\"integrity\":\"sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT/H6NQv/ghhy30o55ufafxJ/LdH79LLs2Kfrn85TLKyA7BUg==\",\"dev\":true,\"requires\":{\"is-extglob\":\"^2.1.1\"}},\"is-number\":{\"version\":\"7.0.0\",\"resolved\":\"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\"integrity\":\"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\"dev\":true},\"is-number-like\":{\"version\":\"1.0.8\",\"resolved\":\"https://registry.npmjs.org/is-number-like/-/is-number-like-1.0.8.tgz\",\"integrity\":\"sha512-6rZi3ezCyFcn5L71ywzz2bS5b2Igl1En3eTlZlvKjpz1n3IZLAYMbKYAIQgFmEu0GENg92ziU/faEOA/aixjbA==\",\"dev\":true,\"requires\":{\"lodash.isfinite\":\"^3.3.2\"}},\"is-wsl\":{\"version\":\"1.1.0\",\"resolved\":\"https://registry.npmjs.org/is-wsl/-/is-wsl-1.1.0.tgz\",\"integrity\":\"sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0=\",\"dev\":true},\"isarray\":{\"version\":\"2.0.1\",\"resolved\":\"https://registry.npmjs.org/isarray/-/isarray-2.0.1.tgz\",\"integrity\":\"sha1-o32U7ZzaLVmGXJ92/llu4fM4dB4=\",\"dev\":true},\"jsonfile\":{\"version\":\"3.0.1\",\"resolved\":\"https://registry.npmjs.org/jsonfile/-/jsonfile-3.0.1.tgz\",\"integrity\":\"sha1-pezG9l9T9mLEQVx2daAzHQmS7GY=\",\"dev\":true,\"requires\":{\"graceful-fs\":\"^4.1.6\"}},\"limiter\":{\"version\":\"1.1.5\",\"resolved\":\"https://registry.npmjs.org/limiter/-/limiter-1.1.5.tgz\",\"integrity\":\"sha512-FWWMIEOxz3GwUI4Ts/IvgVy6LPvoMPgjMdQ185nN6psJyBJ4yOpzqm695/h5umdLJg2vW3GR5iG11MAkR2AzJA==\",\"dev\":true},\"lite-server\":{\"version\":\"2.6.1\",\"resolved\":\"https://registry.npmjs.org/lite-server/-/lite-server-2.6.1.tgz\",\"integrity\":\"sha512-d3oyB/C8AU4EwYQHlLxcu6vTQDnCaLb81v1KKNYABmFS5oeJ11A+YxlqtpbTclID1AFddJfcB5klf0q98vYIMw==\",\"dev\":true,\"requires\":{\"browser-sync\":\"^2.26.13\",\"connect-history-api-fallback\":\"^1.6.0\",\"connect-logger\":\"^0.0.1\",\"lodash\":\"^4.17.20\",\"minimist\":\"^1.2.5\"}},\"localtunnel\":{\"version\":\"2.0.1\",\"resolved\":\"https://registry.npmjs.org/localtunnel/-/localtunnel-2.0.1.tgz\",\"integrity\":\"sha512-LiaI5wZdz0xFkIQpXbNI62ZnNn8IMsVhwxHmhA+h4vj8R9JG/07bQHWwQlyy7b95/5fVOCHJfIHv+a5XnkvaJA==\",\"dev\":true,\"requires\":{\"axios\":\"0.21.1\",\"debug\":\"4.3.1\",\"openurl\":\"1.1.1\",\"yargs\":\"16.2.0\"},\"dependencies\":{\"debug\":{\"version\":\"4.3.1\",\"resolved\":\"https://registry.npmjs.org/debug/-/debug-4.3.1.tgz\",\"integrity\":\"sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==\",\"dev\":true,\"requires\":{\"ms\":\"2.1.2\"}},\"ms\":{\"version\":\"2.1.2\",\"resolved\":\"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\"integrity\":\"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\"dev\":true},\"yargs\":{\"version\":\"16.2.0\",\"resolved\":\"https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz\",\"integrity\":\"sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==\",\"dev\":true,\"requires\":{\"cliui\":\"^7.0.2\",\"escalade\":\"^3.1.1\",\"get-caller-file\":\"^2.0.5\",\"require-directory\":\"^2.1.1\",\"string-width\":\"^4.2.0\",\"y18n\":\"^5.0.5\",\"yargs-parser\":\"^20.2.2\"}}}},\"locate-path\":{\"version\":\"5.0.0\",\"resolved\":\"https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz\",\"integrity\":\"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\",\"dev\":true,\"requires\":{\"p-locate\":\"^4.1.0\"}},\"lodash\":{\"version\":\"4.17.21\",\"resolved\":\"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\"integrity\":\"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\",\"dev\":true},\"lodash.isfinite\":{\"version\":\"3.3.2\",\"resolved\":\"https://registry.npmjs.org/lodash.isfinite/-/lodash.isfinite-3.3.2.tgz\",\"integrity\":\"sha1-+4m2WpqAKBgz8LdHizpRBPiY67M=\",\"dev\":true},\"micromatch\":{\"version\":\"4.0.4\",\"resolved\":\"https://registry.npmjs.org/micromatch/-/micromatch-4.0.4.tgz\",\"integrity\":\"sha512-pRmzw/XUcwXGpD9aI9q/0XOwLNygjETJ8y0ao0wdqprrzDa4YnxLcz7fQRZr8voh8V10kGhABbNcHVk5wHgWwg==\",\"dev\":true,\"requires\":{\"braces\":\"^3.0.1\",\"picomatch\":\"^2.2.3\"}},\"mime\":{\"version\":\"1.4.1\",\"resolved\":\"https://registry.npmjs.org/mime/-/mime-1.4.1.tgz\",\"integrity\":\"sha512-KI1+qOZu5DcW6wayYHSzR/tXKCDC5Om4s1z2QJjDULzLcmf3DvzS7oluY4HCTrc+9FiKmWUgeNLg7W3uIQvxtQ==\",\"dev\":true},\"mime-db\":{\"version\":\"1.48.0\",\"resolved\":\"https://registry.npmjs.org/mime-db/-/mime-db-1.48.0.tgz\",\"integrity\":\"sha512-FM3QwxV+TnZYQ2aRqhlKBMHxk10lTbMt3bBkMAp54ddrNeVSfcQYOOKuGuy3Ddrm38I04If834fOUSq1yzslJQ==\",\"dev\":true},\"mime-types\":{\"version\":\"2.1.31\",\"resolved\":\"https://registry.npmjs.org/mime-types/-/mime-types-2.1.31.tgz\",\"integrity\":\"sha512-XGZnNzm3QvgKxa8dpzyhFTHmpP3l5YNusmne07VUOXxou9CqUqYa/HBy124RqtVh/O2pECas/MOcsDgpilPOPg==\",\"dev\":true,\"requires\":{\"mime-db\":\"1.48.0\"}},\"minimatch\":{\"version\":\"3.0.4\",\"resolved\":\"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz\",\"integrity\":\"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\",\"dev\":true,\"requires\":{\"brace-expansion\":\"^1.1.7\"}},\"minimist\":{\"version\":\"1.2.5\",\"resolved\":\"https://registry.npmjs.org/minimist/-/minimist-1.2.5.tgz\",\"integrity\":\"sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP/UODVpGsr5OhXhhXg6f+qtJ8uiZ+PUxkDWcgIXLw==\",\"dev\":true},\"mitt\":{\"version\":\"1.2.0\",\"resolved\":\"https://registry.npmjs.org/mitt/-/mitt-1.2.0.tgz\",\"integrity\":\"sha512-r6lj77KlwqLhIUku9UWYes7KJtsczvolZkzp8hbaDPPaE24OmWl5s539Mytlj22siEQKosZ26qCBgda2PKwoJw==\",\"dev\":true},\"moment\":{\"version\":\"2.29.1\",\"resolved\":\"https://registry.npmjs.org/moment/-/moment-2.29.1.tgz\",\"integrity\":\"sha512-kHmoybcPV8Sqy59DwNDY3Jefr64lK/by/da0ViFcuA4DH0vQg5Q6Ze5VimxkfQNSC+Mls/Kx53s7TjP1RhFEDQ==\",\"dev\":true},\"ms\":{\"version\":\"2.0.0\",\"resolved\":\"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\"integrity\":\"sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=\",\"dev\":true},\"negotiator\":{\"version\":\"0.6.2\",\"resolved\":\"https://registry.npmjs.org/negotiator/-/negotiator-0.6.2.tgz\",\"integrity\":\"sha512-hZXc7K2e+PgeI1eDBe/10Ard4ekbfrrqG8Ep+8Jmf4JID2bNg7NvCPOZN+kfF574pFQI7mum2AUqDidoKqcTOw==\",\"dev\":true},\"normalize-path\":{\"version\":\"3.0.0\",\"resolved\":\"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\"integrity\":\"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\"dev\":true},\"on-finished\":{\"version\":\"2.3.0\",\"resolved\":\"https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz\",\"integrity\":\"sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=\",\"dev\":true,\"requires\":{\"ee-first\":\"1.1.1\"}},\"openurl\":{\"version\":\"1.1.1\",\"resolved\":\"https://registry.npmjs.org/openurl/-/openurl-1.1.1.tgz\",\"integrity\":\"sha1-OHW0sO96UsFW8NtB1GCduw+Us4c=\",\"dev\":true},\"opn\":{\"version\":\"5.3.0\",\"resolved\":\"https://registry.npmjs.org/opn/-/opn-5.3.0.tgz\",\"integrity\":\"sha512-bYJHo/LOmoTd+pfiYhfZDnf9zekVJrY+cnS2a5F2x+w5ppvTqObojTP7WiFG+kVZs9Inw+qQ/lw7TroWwhdd2g==\",\"dev\":true,\"requires\":{\"is-wsl\":\"^1.1.0\"}},\"p-limit\":{\"version\":\"2.3.0\",\"resolved\":\"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz\",\"integrity\":\"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\",\"dev\":true,\"requires\":{\"p-try\":\"^2.0.0\"}},\"p-locate\":{\"version\":\"4.1.0\",\"resolved\":\"https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz\",\"integrity\":\"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\",\"dev\":true,\"requires\":{\"p-limit\":\"^2.2.0\"}},\"p-try\":{\"version\":\"2.2.0\",\"resolved\":\"https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz\",\"integrity\":\"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\",\"dev\":true},\"parseqs\":{\"version\":\"0.0.6\",\"resolved\":\"https://registry.npmjs.org/parseqs/-/parseqs-0.0.6.tgz\",\"integrity\":\"sha512-jeAGzMDbfSHHA091hr0r31eYfTig+29g3GKKE/PPbEQ65X0lmMwlEoqmhzu0iztID5uJpZsFlUPDP8ThPL7M8w==\",\"dev\":true},\"parseuri\":{\"version\":\"0.0.6\",\"resolved\":\"https://registry.npmjs.org/parseuri/-/parseuri-0.0.6.tgz\",\"integrity\":\"sha512-AUjen8sAkGgao7UyCX6Ahv0gIK2fABKmYjvP4xmy5JaKvcbTRueIqIPHLAfq30xJddqSE033IOMUSOMCcK3Sow==\",\"dev\":true},\"parseurl\":{\"version\":\"1.3.3\",\"resolved\":\"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\"integrity\":\"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\"dev\":true},\"path-exists\":{\"version\":\"4.0.0\",\"resolved\":\"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\"integrity\":\"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\"dev\":true},\"picomatch\":{\"version\":\"2.3.0\",\"resolved\":\"https://registry.npmjs.org/picomatch/-/picomatch-2.3.0.tgz\",\"integrity\":\"sha512-lY1Q/PiJGC2zOv/z391WOTD+Z02bCgsFfvxoXXf6h7kv9o+WmsmzYqrAwY63sNgOxE4xEdq0WyUnXfKeBrSvYw==\",\"dev\":true},\"portscanner\":{\"version\":\"2.1.1\",\"resolved\":\"https://registry.npmjs.org/portscanner/-/portscanner-2.1.1.tgz\",\"integrity\":\"sha1-6rtAnk3iSVD1oqUW01rnaTQ/u5Y=\",\"dev\":true,\"requires\":{\"async\":\"1.5.2\",\"is-number-like\":\"^1.0.3\"}},\"qs\":{\"version\":\"6.2.3\",\"resolved\":\"https://registry.npmjs.org/qs/-/qs-6.2.3.tgz\",\"integrity\":\"sha1-HPyyXBCpsrSDBT/zn138kjOQjP4=\",\"dev\":true},\"range-parser\":{\"version\":\"1.2.1\",\"resolved\":\"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\"integrity\":\"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\"dev\":true},\"raw-body\":{\"version\":\"2.4.1\",\"resolved\":\"https://registry.npmjs.org/raw-body/-/raw-body-2.4.1.tgz\",\"integrity\":\"sha512-9WmIKF6mkvA0SLmA2Knm9+qj89e+j1zqgyn8aXGd7+nAduPoqgI9lO57SAZNn/Byzo5P7JhXTyg9PzaJbH73bA==\",\"dev\":true,\"requires\":{\"bytes\":\"3.1.0\",\"http-errors\":\"1.7.3\",\"iconv-lite\":\"0.4.24\",\"unpipe\":\"1.0.0\"}},\"readdirp\":{\"version\":\"3.6.0\",\"resolved\":\"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\"integrity\":\"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\"dev\":true,\"requires\":{\"picomatch\":\"^2.2.1\"}},\"require-directory\":{\"version\":\"2.1.1\",\"resolved\":\"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\"integrity\":\"sha1-jGStX9MNqxyXbiNE/+f3kqam30I=\",\"dev\":true},\"require-main-filename\":{\"version\":\"2.0.0\",\"resolved\":\"https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz\",\"integrity\":\"sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==\",\"dev\":true},\"requires-port\":{\"version\":\"1.0.0\",\"resolved\":\"https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz\",\"integrity\":\"sha1-kl0mAdOaxIXgkc8NpcbmlNw9yv8=\",\"dev\":true},\"resp-modifier\":{\"version\":\"6.0.2\",\"resolved\":\"https://registry.npmjs.org/resp-modifier/-/resp-modifier-6.0.2.tgz\",\"integrity\":\"sha1-sSTeXE+6/LpUH0j/pzlw9KpFa08=\",\"dev\":true,\"requires\":{\"debug\":\"^2.2.0\",\"minimatch\":\"^3.0.2\"},\"dependencies\":{\"debug\":{\"version\":\"2.6.9\",\"resolved\":\"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\"integrity\":\"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\"dev\":true,\"requires\":{\"ms\":\"2.0.0\"}}}},\"rx\":{\"version\":\"4.1.0\",\"resolved\":\"https://registry.npmjs.org/rx/-/rx-4.1.0.tgz\",\"integrity\":\"sha1-pfE/957zt0D+MKqAP7CfmIBdR4I=\",\"dev\":true},\"rxjs\":{\"version\":\"5.5.12\",\"resolved\":\"https://registry.npmjs.org/rxjs/-/rxjs-5.5.12.tgz\",\"integrity\":\"sha512-xx2itnL5sBbqeeiVgNPVuQQ1nC8Jp2WfNJhXWHmElW9YmrpS9UVnNzhP3EH3HFqexO5Tlp8GhYY+WEcqcVMvGw==\",\"dev\":true,\"requires\":{\"symbol-observable\":\"1.0.1\"}},\"safer-buffer\":{\"version\":\"2.1.2\",\"resolved\":\"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\"integrity\":\"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\"dev\":true},\"send\":{\"version\":\"0.16.2\",\"resolved\":\"https://registry.npmjs.org/send/-/send-0.16.2.tgz\",\"integrity\":\"sha512-E64YFPUssFHEFBvpbbjr44NCLtI1AohxQ8ZSiJjQLskAdKuriYEP6VyGEsRDH8ScozGpkaX1BGvhanqCwkcEZw==\",\"dev\":true,\"requires\":{\"debug\":\"2.6.9\",\"depd\":\"~1.1.2\",\"destroy\":\"~1.0.4\",\"encodeurl\":\"~1.0.2\",\"escape-html\":\"~1.0.3\",\"etag\":\"~1.8.1\",\"fresh\":\"0.5.2\",\"http-errors\":\"~1.6.2\",\"mime\":\"1.4.1\",\"ms\":\"2.0.0\",\"on-finished\":\"~2.3.0\",\"range-parser\":\"~1.2.0\",\"statuses\":\"~1.4.0\"},\"dependencies\":{\"debug\":{\"version\":\"2.6.9\",\"resolved\":\"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\"integrity\":\"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\"dev\":true,\"requires\":{\"ms\":\"2.0.0\"}},\"http-errors\":{\"version\":\"1.6.3\",\"resolved\":\"https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz\",\"integrity\":\"sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=\",\"dev\":true,\"requires\":{\"depd\":\"~1.1.2\",\"inherits\":\"2.0.3\",\"setprototypeof\":\"1.1.0\",\"statuses\":\">= 1.4.0 < 2\"}},\"inherits\":{\"version\":\"2.0.3\",\"resolved\":\"https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz\",\"integrity\":\"sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\",\"dev\":true},\"setprototypeof\":{\"version\":\"1.1.0\",\"resolved\":\"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz\",\"integrity\":\"sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ==\",\"dev\":true},\"statuses\":{\"version\":\"1.4.0\",\"resolved\":\"https://registry.npmjs.org/statuses/-/statuses-1.4.0.tgz\",\"integrity\":\"sha512-zhSCtt8v2NDrRlPQpCNtw/heZLtfUDqxBM1udqikb/Hbk52LK4nQSwr10u77iopCW5LsyHpuXS0GnEc48mLeew==\",\"dev\":true}}},\"serve-index\":{\"version\":\"1.9.1\",\"resolved\":\"https://registry.npmjs.org/serve-index/-/serve-index-1.9.1.tgz\",\"integrity\":\"sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=\",\"dev\":true,\"requires\":{\"accepts\":\"~1.3.4\",\"batch\":\"0.6.1\",\"debug\":\"2.6.9\",\"escape-html\":\"~1.0.3\",\"http-errors\":\"~1.6.2\",\"mime-types\":\"~2.1.17\",\"parseurl\":\"~1.3.2\"},\"dependencies\":{\"debug\":{\"version\":\"2.6.9\",\"resolved\":\"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\"integrity\":\"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\"dev\":true,\"requires\":{\"ms\":\"2.0.0\"}},\"http-errors\":{\"version\":\"1.6.3\",\"resolved\":\"https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz\",\"integrity\":\"sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=\",\"dev\":true,\"requires\":{\"depd\":\"~1.1.2\",\"inherits\":\"2.0.3\",\"setprototypeof\":\"1.1.0\",\"statuses\":\">= 1.4.0 < 2\"}},\"inherits\":{\"version\":\"2.0.3\",\"resolved\":\"https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz\",\"integrity\":\"sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\",\"dev\":true},\"setprototypeof\":{\"version\":\"1.1.0\",\"resolved\":\"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz\",\"integrity\":\"sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ==\",\"dev\":true},\"statuses\":{\"version\":\"1.5.0\",\"resolved\":\"https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz\",\"integrity\":\"sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=\",\"dev\":true}}},\"serve-static\":{\"version\":\"1.13.2\",\"resolved\":\"https://registry.npmjs.org/serve-static/-/serve-static-1.13.2.tgz\",\"integrity\":\"sha512-p/tdJrO4U387R9oMjb1oj7qSMaMfmOyd4j9hOFoxZe2baQszgHcSWjuya/CiT5kgZZKRudHNOA0pYXOl8rQ5nw==\",\"dev\":true,\"requires\":{\"encodeurl\":\"~1.0.2\",\"escape-html\":\"~1.0.3\",\"parseurl\":\"~1.3.2\",\"send\":\"0.16.2\"}},\"server-destroy\":{\"version\":\"1.0.1\",\"resolved\":\"https://registry.npmjs.org/server-destroy/-/server-destroy-1.0.1.tgz\",\"integrity\":\"sha1-8Tv5KOQrnD55OD5hzDmYtdFObN0=\",\"dev\":true},\"set-blocking\":{\"version\":\"2.0.0\",\"resolved\":\"https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz\",\"integrity\":\"sha1-BF+XgtARrppoA93TgrJDkrPYkPc=\",\"dev\":true},\"setprototypeof\":{\"version\":\"1.1.1\",\"resolved\":\"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.1.tgz\",\"integrity\":\"sha512-JvdAWfbXeIGaZ9cILp38HntZSFSo3mWg6xGcJJsd+d4aRMOqauag1C63dJfDw7OaMYwEbHMOxEZ1lqVRYP2OAw==\",\"dev\":true},\"socket.io\":{\"version\":\"2.4.0\",\"resolved\":\"https://registry.npmjs.org/socket.io/-/socket.io-2.4.0.tgz\",\"integrity\":\"sha512-9UPJ1UTvKayuQfVv2IQ3k7tCQC/fboDyIK62i99dAQIyHKaBsNdTpwHLgKJ6guRWxRtC9H+138UwpaGuQO9uWQ==\",\"dev\":true,\"requires\":{\"debug\":\"~4.1.0\",\"engine.io\":\"~3.5.0\",\"has-binary2\":\"~1.0.2\",\"socket.io-adapter\":\"~1.1.0\",\"socket.io-client\":\"2.4.0\",\"socket.io-parser\":\"~3.4.0\"},\"dependencies\":{\"component-emitter\":{\"version\":\"1.2.1\",\"resolved\":\"https://registry.npmjs.org/component-emitter/-/component-emitter-1.2.1.tgz\",\"integrity\":\"sha1-E3kY1teCg/ffemt8WmPhQOaUJeY=\",\"dev\":true},\"debug\":{\"version\":\"4.1.1\",\"resolved\":\"https://registry.npmjs.org/debug/-/debug-4.1.1.tgz\",\"integrity\":\"sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==\",\"dev\":true,\"requires\":{\"ms\":\"^2.1.1\"}},\"ms\":{\"version\":\"2.1.3\",\"resolved\":\"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\"integrity\":\"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\"dev\":true},\"socket.io-parser\":{\"version\":\"3.4.1\",\"resolved\":\"https://registry.npmjs.org/socket.io-parser/-/socket.io-parser-3.4.1.tgz\",\"integrity\":\"sha512-11hMgzL+WCLWf1uFtHSNvliI++tcRUWdoeYuwIl+Axvwy9z2gQM+7nJyN3STj1tLj5JyIUH8/gpDGxzAlDdi0A==\",\"dev\":true,\"requires\":{\"component-emitter\":\"1.2.1\",\"debug\":\"~4.1.0\",\"isarray\":\"2.0.1\"}}}},\"socket.io-adapter\":{\"version\":\"1.1.2\",\"resolved\":\"https://registry.npmjs.org/socket.io-adapter/-/socket.io-adapter-1.1.2.tgz\",\"integrity\":\"sha512-WzZRUj1kUjrTIrUKpZLEzFZ1OLj5FwLlAFQs9kuZJzJi5DKdU7FsWc36SNmA8iDOtwBQyT8FkrriRM8vXLYz8g==\",\"dev\":true},\"socket.io-client\":{\"version\":\"2.4.0\",\"resolved\":\"https://registry.npmjs.org/socket.io-client/-/socket.io-client-2.4.0.tgz\",\"integrity\":\"sha512-M6xhnKQHuuZd4Ba9vltCLT9oa+YvTsP8j9NcEiLElfIg8KeYPyhWOes6x4t+LTAC8enQbE/995AdTem2uNyKKQ==\",\"dev\":true,\"requires\":{\"backo2\":\"1.0.2\",\"component-bind\":\"1.0.0\",\"component-emitter\":\"~1.3.0\",\"debug\":\"~3.1.0\",\"engine.io-client\":\"~3.5.0\",\"has-binary2\":\"~1.0.2\",\"indexof\":\"0.0.1\",\"parseqs\":\"0.0.6\",\"parseuri\":\"0.0.6\",\"socket.io-parser\":\"~3.3.0\",\"to-array\":\"0.1.4\"}},\"socket.io-parser\":{\"version\":\"3.3.2\",\"resolved\":\"https://registry.npmjs.org/socket.io-parser/-/socket.io-parser-3.3.2.tgz\",\"integrity\":\"sha512-FJvDBuOALxdCI9qwRrO/Rfp9yfndRtc1jSgVgV8FDraihmSP/MLGD5PEuJrNfjALvcQ+vMDM/33AWOYP/JSjDg==\",\"dev\":true,\"requires\":{\"component-emitter\":\"~1.3.0\",\"debug\":\"~3.1.0\",\"isarray\":\"2.0.1\"}},\"statuses\":{\"version\":\"1.3.1\",\"resolved\":\"https://registry.npmjs.org/statuses/-/statuses-1.3.1.tgz\",\"integrity\":\"sha1-+vUbnrdKrvOzrPStX2Gr8ky3uT4=\",\"dev\":true},\"stream-throttle\":{\"version\":\"0.1.3\",\"resolved\":\"https://registry.npmjs.org/stream-throttle/-/stream-throttle-0.1.3.tgz\",\"integrity\":\"sha1-rdV8jXzHOoFjDTHNVdOWHPr7qcM=\",\"dev\":true,\"requires\":{\"commander\":\"^2.2.0\",\"limiter\":\"^1.0.5\"}},\"string-width\":{\"version\":\"4.2.2\",\"resolved\":\"https://registry.npmjs.org/string-width/-/string-width-4.2.2.tgz\",\"integrity\":\"sha512-XBJbT3N4JhVumXE0eoLU9DCjcaF92KLNqTmFCnG1pf8duUxFGwtP6AD6nkjw9a3IdiRtL3E2w3JDiE/xi3vOeA==\",\"dev\":true,\"requires\":{\"emoji-regex\":\"^8.0.0\",\"is-fullwidth-code-point\":\"^3.0.0\",\"strip-ansi\":\"^6.0.0\"},\"dependencies\":{\"ansi-regex\":{\"version\":\"5.0.0\",\"resolved\":\"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz\",\"integrity\":\"sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==\",\"dev\":true},\"strip-ansi\":{\"version\":\"6.0.0\",\"resolved\":\"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz\",\"integrity\":\"sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==\",\"dev\":true,\"requires\":{\"ansi-regex\":\"^5.0.0\"}}}},\"strip-ansi\":{\"version\":\"3.0.1\",\"resolved\":\"https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz\",\"integrity\":\"sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=\",\"dev\":true,\"requires\":{\"ansi-regex\":\"^2.0.0\"}},\"supports-color\":{\"version\":\"2.0.0\",\"resolved\":\"https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz\",\"integrity\":\"sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=\",\"dev\":true},\"symbol-observable\":{\"version\":\"1.0.1\",\"resolved\":\"https://registry.npmjs.org/symbol-observable/-/symbol-observable-1.0.1.tgz\",\"integrity\":\"sha1-g0D8RwLDEi310iKI+IKD9RPT/dQ=\",\"dev\":true},\"tfunk\":{\"version\":\"4.0.0\",\"resolved\":\"https://registry.npmjs.org/tfunk/-/tfunk-4.0.0.tgz\",\"integrity\":\"sha512-eJQ0dGfDIzWNiFNYFVjJ+Ezl/GmwHaFTBTjrtqNPW0S7cuVDBrZrmzUz6VkMeCR4DZFqhd4YtLwsw3i2wYHswQ==\",\"dev\":true,\"requires\":{\"chalk\":\"^1.1.3\",\"dlv\":\"^1.1.3\"}},\"to-array\":{\"version\":\"0.1.4\",\"resolved\":\"https://registry.npmjs.org/to-array/-/to-array-0.1.4.tgz\",\"integrity\":\"sha1-F+bBH3PdTz10zaek/zI46a2b+JA=\",\"dev\":true},\"to-regex-range\":{\"version\":\"5.0.1\",\"resolved\":\"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\"integrity\":\"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\"dev\":true,\"requires\":{\"is-number\":\"^7.0.0\"}},\"toidentifier\":{\"version\":\"1.0.0\",\"resolved\":\"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.0.tgz\",\"integrity\":\"sha512-yaOH/Pk/VEhBWWTlhI+qXxDFXlejDGcQipMlyxda9nthulaxLZUNcUqFxokp0vcYnvteJln5FNQDRrxj3YcbVw==\",\"dev\":true},\"ua-parser-js\":{\"version\":\"0.7.28\",\"resolved\":\"https://registry.npmjs.org/ua-parser-js/-/ua-parser-js-0.7.28.tgz\",\"integrity\":\"sha512-6Gurc1n//gjp9eQNXjD9O3M/sMwVtN5S8Lv9bvOYBfKfDNiIIhqiyi01vMBO45u4zkDE420w/e0se7Vs+sIg+g==\",\"dev\":true},\"universalify\":{\"version\":\"0.1.2\",\"resolved\":\"https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz\",\"integrity\":\"sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==\",\"dev\":true},\"unpipe\":{\"version\":\"1.0.0\",\"resolved\":\"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\"integrity\":\"sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw=\",\"dev\":true},\"utils-merge\":{\"version\":\"1.0.1\",\"resolved\":\"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\"integrity\":\"sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM=\",\"dev\":true},\"which-module\":{\"version\":\"2.0.0\",\"resolved\":\"https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz\",\"integrity\":\"sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho=\",\"dev\":true},\"wrap-ansi\":{\"version\":\"7.0.0\",\"resolved\":\"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\"integrity\":\"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\"dev\":true,\"requires\":{\"ansi-styles\":\"^4.0.0\",\"string-width\":\"^4.1.0\",\"strip-ansi\":\"^6.0.0\"},\"dependencies\":{\"ansi-regex\":{\"version\":\"5.0.0\",\"resolved\":\"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz\",\"integrity\":\"sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==\",\"dev\":true},\"ansi-styles\":{\"version\":\"4.3.0\",\"resolved\":\"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\"integrity\":\"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\"dev\":true,\"requires\":{\"color-convert\":\"^2.0.1\"}},\"strip-ansi\":{\"version\":\"6.0.0\",\"resolved\":\"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz\",\"integrity\":\"sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==\",\"dev\":true,\"requires\":{\"ansi-regex\":\"^5.0.0\"}}}},\"ws\":{\"version\":\"7.4.6\",\"resolved\":\"https://registry.npmjs.org/ws/-/ws-7.4.6.tgz\",\"integrity\":\"sha512-YmhHDO4MzaDLB+M9ym/mDA5z0naX8j7SIlT8f8z+I0VtzsRbekxEutHSme7NPS2qE8StCYQNUnfWdXta/Yu85A==\",\"dev\":true},\"xmlhttprequest-ssl\":{\"version\":\"1.6.3\",\"resolved\":\"https://registry.npmjs.org/xmlhttprequest-ssl/-/xmlhttprequest-ssl-1.6.3.tgz\",\"integrity\":\"sha512-3XfeQE/wNkvrIktn2Kf0869fC0BN6UpydVasGIeSm2B1Llihf7/0UfZM+eCkOw3P7bP4+qPgqhm7ZoxuJtFU0Q==\",\"dev\":true},\"y18n\":{\"version\":\"5.0.8\",\"resolved\":\"https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz\",\"integrity\":\"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\",\"dev\":true},\"yargs\":{\"version\":\"15.4.1\",\"resolved\":\"https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz\",\"integrity\":\"sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==\",\"dev\":true,\"requires\":{\"cliui\":\"^6.0.0\",\"decamelize\":\"^1.2.0\",\"find-up\":\"^4.1.0\",\"get-caller-file\":\"^2.0.1\",\"require-directory\":\"^2.1.1\",\"require-main-filename\":\"^2.0.0\",\"set-blocking\":\"^2.0.0\",\"string-width\":\"^4.2.0\",\"which-module\":\"^2.0.0\",\"y18n\":\"^4.0.0\",\"yargs-parser\":\"^18.1.2\"},\"dependencies\":{\"ansi-regex\":{\"version\":\"5.0.0\",\"resolved\":\"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz\",\"integrity\":\"sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==\",\"dev\":true},\"ansi-styles\":{\"version\":\"4.3.0\",\"resolved\":\"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\"integrity\":\"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\"dev\":true,\"requires\":{\"color-convert\":\"^2.0.1\"}},\"cliui\":{\"version\":\"6.0.0\",\"resolved\":\"https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz\",\"integrity\":\"sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==\",\"dev\":true,\"requires\":{\"string-width\":\"^4.2.0\",\"strip-ansi\":\"^6.0.0\",\"wrap-ansi\":\"^6.2.0\"}},\"strip-ansi\":{\"version\":\"6.0.0\",\"resolved\":\"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz\",\"integrity\":\"sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==\",\"dev\":true,\"requires\":{\"ansi-regex\":\"^5.0.0\"}},\"wrap-ansi\":{\"version\":\"6.2.0\",\"resolved\":\"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz\",\"integrity\":\"sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==\",\"dev\":true,\"requires\":{\"ansi-styles\":\"^4.0.0\",\"string-width\":\"^4.1.0\",\"strip-ansi\":\"^6.0.0\"}},\"y18n\":{\"version\":\"4.0.3\",\"resolved\":\"https://registry.npmjs.org/y18n/-/y18n-4.0.3.tgz\",\"integrity\":\"sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ==\",\"dev\":true},\"yargs-parser\":{\"version\":\"18.1.3\",\"resolved\":\"https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz\",\"integrity\":\"sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==\",\"dev\":true,\"requires\":{\"camelcase\":\"^5.0.0\",\"decamelize\":\"^1.2.0\"}}}},\"yargs-parser\":{\"version\":\"20.2.9\",\"resolved\":\"https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz\",\"integrity\":\"sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==\",\"dev\":true},\"yeast\":{\"version\":\"0.1.2\",\"resolved\":\"https://registry.npmjs.org/yeast/-/yeast-0.1.2.tgz\",\"integrity\":\"sha1-AI4G2AlDIMNy28L47XagymyKxBk=\",\"dev\":true}}}"},{"title":"","date":"2021-11-05T16:57:58.547Z","updated":"2021-11-05T02:24:57.392Z","comments":true,"path":"thinking/springcloud/nacos.html","permalink":"http://example.com/thinking/springcloud/nacos.html","excerpt":"","text":"1.参考：https://juejin.cn/post/6974921087922470926 启动： sh startup.sh -m standalone 2.bootstrap.yml文件配置 12345678910111213141516171819spring: application: #服务名称 name: naocs-service profiles: active: dev cloud: nacos: config: # 配置文件的环境 group: $&#123;spring.profiles.active&#125; # 配置文件的格式 file-extension: yaml # 配置中心的地址 server-addr: 47.105.198.54:8848 # 配置文件prefix prefix: $&#123;spring.application.name&#125; #命名空间 namespace: mall nacos线上配置 Data Id： $&#123;prefix&#125;-$&#123;spring.profile.active&#125;.$&#123;file-extension&#125; Group：按照环境进行划分，dev、test、prod"},{"title":"","date":"2022-01-07T09:24:50.659Z","updated":"2022-01-07T09:24:50.659Z","comments":true,"path":"thinking/实践/docker分布式部署实践.html","permalink":"http://example.com/thinking/%E5%AE%9E%E8%B7%B5/docker%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E5%AE%9E%E8%B7%B5.html","excerpt":"","text":""},{"title":"","date":"2022-01-07T07:42:22.968Z","updated":"2022-01-07T07:42:22.968Z","comments":true,"path":"thinking/实践/mysql主从、分布式实践.html","permalink":"http://example.com/thinking/%E5%AE%9E%E8%B7%B5/mysql%E4%B8%BB%E4%BB%8E%E3%80%81%E5%88%86%E5%B8%83%E5%BC%8F%E5%AE%9E%E8%B7%B5.html","excerpt":"","text":""},{"title":"","date":"2021-11-05T17:35:19.519Z","updated":"2021-11-05T17:35:19.459Z","comments":true,"path":"thinking/springcloud/坑.html","permalink":"http://example.com/thinking/springcloud/%E5%9D%91.html","excerpt":"","text":"加上@RefreshScope后 ，@Value注解获取的值为空：原因是方法是private修饰了"},{"title":"","date":"2021-11-29T16:13:32.881Z","updated":"2021-08-24T07:41:01.550Z","comments":true,"path":"thinking/java/SpringBoot基础.html","permalink":"http://example.com/thinking/java/SpringBoot%E5%9F%BA%E7%A1%80.html","excerpt":"","text":"时间 123456@Nullable@DateTimeFormat( iso = DateTimeFormat.ISO.DATE_TIME)@ApiModelProperty(&quot;结束时间&quot;)private Date endDate;"},{"title":"","date":"2021-11-29T16:13:37.558Z","updated":"2021-11-01T05:37:06.785Z","comments":true,"path":"thinking/java/动态代理.html","permalink":"http://example.com/thinking/java/%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html","excerpt":"","text":"运行期间，为interface创建实例 InvocationHandler + Proxy.newProxyInstance jdk动态代理：代理目标是接口 cGlib：代理目标是类"},{"title":"","date":"2021-11-29T16:13:34.784Z","updated":"2021-08-31T14:53:36.271Z","comments":true,"path":"thinking/java/Spring注解.html","permalink":"http://example.com/thinking/java/Spring%E6%B3%A8%E8%A7%A3.html","excerpt":"","text":""},{"title":"","date":"2021-11-29T16:13:30.510Z","updated":"2021-08-21T09:33:13.435Z","comments":true,"path":"thinking/java/工具.html","permalink":"http://example.com/thinking/java/%E5%B7%A5%E5%85%B7.html","excerpt":"","text":"1.糊涂工具 easyexcel"},{"title":"","date":"2021-11-29T16:13:22.503Z","updated":"2021-09-17T01:26:07.207Z","comments":true,"path":"thinking/java/错误原因.html","permalink":"http://example.com/thinking/java/%E9%94%99%E8%AF%AF%E5%8E%9F%E5%9B%A0.html","excerpt":"","text":"No converter found for return value of type: class com.zeesea.response.HttpResponse。（没有加Getter方法）；"},{"title":"","date":"2021-11-05T09:42:58.943Z","updated":"2021-08-31T14:55:59.172Z","comments":true,"path":"thinking/Spring boot/注解.html","permalink":"http://example.com/thinking/Spring%20boot/%E6%B3%A8%E8%A7%A3.html","excerpt":"","text":"一、注入 @Autowire bytype 注入失败之后，使用byname，根据字段名注入， @Qualifier 可以指定注入具名@Component @Lazy 延迟实例化 二、注册 @Component @Bean @Service @Primary 多个相同的bean和component时，加此注解指定优先返回 优先级"},{"title":"","date":"2021-11-24T06:17:36.738Z","updated":"2021-11-24T06:17:36.729Z","comments":true,"path":"thinking/sql/sql常见问题.html","permalink":"http://example.com/thinking/sql/sql%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html","excerpt":"","text":"```mysqlDATE_FORMAT(create_time,’%m-%d’)12345678910111213142. geometry类型的字段怎么插入 st_GeomFromText(&#x27;POINT (116.123 39.345)&#x27;)3. ```mysql //统计-日期 SELECT count(1) as `value`, DATE_FORMAT(create_time,&#x27;%m-%d&#x27;) as `date` FROM user &lt;where&gt; &lt;if test=&quot;startDateStr != null and endDateStr != null&quot;&gt; create_time between #&#123;startDateStr&#125; and #&#123;endDateStr&#125; &lt;/if&gt; &lt;/where&gt; GROUP BY DATE_FORMAT(create_time,&#x27;%m-%d&#x27;) 逗号拼接ID，select GROUP_CONCAT(id) from sys_menu"},{"title":"","date":"2021-11-08T07:14:03.221Z","updated":"2021-10-29T02:29:05.305Z","comments":true,"path":"thinking/sql/优化mysql.html","permalink":"http://example.com/thinking/sql/%E4%BC%98%E5%8C%96mysql.html","excerpt":"","text":"准备： 一、语法顺序 与 执行顺序 1234567891011语法顺序1. SELECT 2. DISTINCT &lt;select_list&gt;3. FROM &lt;left_table&gt;4. &lt;join_type&gt; JOIN &lt;right_table&gt;5. ON &lt;join_condition&gt;6. WHERE &lt;where_condition&gt;7. GROUP BY &lt;group_by_list&gt;8. HAVING &lt;having_condition&gt;9. ORDER BY &lt;order_by_condition&gt;10.LIMIT &lt;limit_number&gt; 1234567891011执行顺序FROM &lt;表名&gt; 选取表，将多个表数据通过笛卡尔积变成一个表。ON &lt;筛选条件&gt; 对笛卡尔积的虚表进行筛选JOIN 指定join，用于添加数据到on之后的虚表中，例如left join会将左表的剩余数据添加到虚表中WHERE 对上述虚表进行筛选GROUP BY &lt;分组条件&gt; 分组 用于having子句进行判断，在书写上这类聚合函数是写在having判断里面的HAVING &lt;分组筛选&gt; 对分组后的结果进行聚合筛选SELECT &lt;返回数据列表&gt; 返回的单列必须在group by子句中，聚合函数除外DISTINCT 去重复ORDER BY &lt;排序条件&gt; 排序LIMIT &lt;行数限制&gt; 二、模糊搜索 使用MySQL内置函数INSTR(str,substr) 来匹配 使用FullText全文索引，用match against 检索 三、导致效率低下的情况 导致全表扫描 左模糊查询 in 和not in 否定方式查询：比如 &lt;&gt;,!= (改为 &gt;+or+&lt;这种形式： WHERE col_1 &gt; 100 or col_1 &lt; 100;) 自动进行类型转换1."},{"title":"","date":"2021-11-05T09:42:57.716Z","updated":"2021-09-02T13:58:30.296Z","comments":true,"path":"thinking/Spring boot/异常.html","permalink":"http://example.com/thinking/Spring%20boot/%E5%BC%82%E5%B8%B8.html","excerpt":"","text":"Exception RunTimeException 运行时，可以不用try catch 怎么全局接受异常(@ControllerAdvice) 国际化使用.properties文件+@ConfigurationProperties(指定前缀)+PropertySource(“指定配置文件”)"},{"title":"","date":"2021-10-27T13:10:28.719Z","updated":"2021-10-27T13:10:28.714Z","comments":true,"path":"thinking/java/多线程/threadlocal.html","permalink":"http://example.com/thinking/java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/threadlocal.html","excerpt":"","text":"ThreadLocal: 不加锁，所以速度优于Synchronized 每个线程都有一个ThreadLocalMap存储ThreadLocal；每个线程互不干扰； 方法： get(); set(); initialValue(); remove(); 如果当前线程ThreadLocalMap为空时, get()会调用initialValue()，否则直接返回之前的结果； 调用remove()后，get会调用initialValue(); 注意： ThreadLocalMap的key是弱引用类型，Value是强引用类型，所以在用完ThreadLocal后 调用remove避免Value内存泄漏。 ThreadLocal不应该去存储静态变量"},{"title":"","date":"2021-10-27T15:24:41.855Z","updated":"2021-10-27T15:24:41.845Z","comments":true,"path":"thinking/java/多线程/多线程.html","permalink":"http://example.com/thinking/java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E7%BA%BF%E7%A8%8B.html","excerpt":"","text":"1. ReentrantLock：a. lock与unlock; b.trylock c. Condition(使用await与signal，使用前需要调用lock方法获得对象监视器)（无法像Synchronized一样在异常时自动释放锁，需要手动释放，所以需要在finally里释放锁 ） 2. Synchronized: 锁住代码块或者方法Synchronized 缺点：a .不能设置锁超时时间; b.不能通过代码释放锁; c.容易造成死锁 d.无法知道是否成功拿到锁3. Volatile: 适用于只有一个线程进行写的操作，变量被修改后，强制其它线程能够实时读取到主内存变量的最新值。（volatile 只能保证可见性，不能保证原子性）4. ThreadLocal: 每个线程都有变量的副本，互不干扰。总结： 当只有一个线程写，其它线程都是读的时候，可以用volatile修饰变量 当多个线程写，那么一般情况下并发不严重的话可以用Synchronized，Synchronized并不是一开始就是重量级锁，在并发不严重的时候，比如只有一个线程访问的时候，是偏向锁；当多个线程访问，但不是同时访问，这时候锁升级为轻量级锁；当多个线程同时访问，这时候升级为重量级锁。所以在并发不是很严重的情况下，使用Synchronized是可以的。不过Synchronized有局限性，比如不能设置锁超时，不能通过代码释放锁。 ReentranLock 可以通过代码释放锁，可以设置锁超时。 高并发下，Synchronized、ReentranLock 效率低，因为同一时刻只有一个线程能进入同步代码块，如果同时有很多线程访问，那么其它线程就都在等待锁。这个时候可以使用并发包下的数据结构，例如ConcurrentHashMap，LinkBlockingQueue，以及原子性的数据结构如：AtomicInteger。"},{"title":"","date":"2021-11-05T09:41:17.813Z","updated":"2021-10-27T16:55:00.155Z","comments":true,"path":"thinking/java/多线程/锁.html","permalink":"http://example.com/thinking/java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E9%94%81.html","excerpt":"","text":"一、乐观锁与悲观锁 乐观锁： 非互斥同步锁，例如 原子类、并发容器 悲观锁：互斥同步锁，例如 sync 与 lock 数据库： 乐观： version 悲观: select for update 两种锁各自的使用场景：各有干秋悲观锁：适合并发写入多的情况，适用于临界区持锁时间比较长的情况，悲观锁可以避免大量的无用自旋等消耗，典型情况：1临界区有IO操作2临界区代码复杂或者循环量大3临界区竞争非常激烈 乐观锁：适合并发写入少，大部分是读取的场景，不加锁的能让读取性能大幅提高。"},{"title":"","date":"2021-11-26T11:59:43.415Z","updated":"2021-11-26T11:59:43.406Z","comments":true,"path":"thinking/java/设计模式/类之间的关系.html","permalink":"http://example.com/thinking/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%B1%BB%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB.html","excerpt":"","text":"类之间如何实现高内聚 低耦合？ 拆分接口，细化接口粒度。让接口分别应对不同的变化。（接口隔离） 类之间如何解耦？ 迪米特原则 防止继承泛滥 里式替换原则 装饰者模式 通过接口去规范装饰类需要实现的功能特点： 把对象传到构造器里面"}],"posts":[{"title":"记一次docker部署mysql主从复制(单向)","slug":"sql-记一次docker部署mysql主从复制-单向","date":"2020-09-01T16:00:00.000Z","updated":"2022-01-17T13:11:59.638Z","comments":true,"path":"2020/09/02/sql-记一次docker部署mysql主从复制-单向/","link":"","permalink":"http://example.com/2020/09/02/sql-%E8%AE%B0%E4%B8%80%E6%AC%A1docker%E9%83%A8%E7%BD%B2mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6-%E5%8D%95%E5%90%91/","excerpt":"记一次docker部署mysql主从复制(单向)","text":"原理：主数据库操作mysql时，生成二进制日志。从数据库向主数据库请求到更新的二进制日志后，根据日志同步从数据库；MySQL主从复制的三个线程：1.主节点： binarylog dump thread(用于记录日志binary log) 2.从节点：I/O thread(接收主节点binlog dump 进程发来的更新以后，保存到relay-log中) 3.从节点：SQL thread(负责读取relay log，解析成具体的操作并执行，最终保证主从数据的一致性) 如下图所示: 环境：docker、mysql版本8.0步骤： 配置一个服务器为 master。 配置一个服务器为 slave。 将 slave 连接到 master。 配置master:将一台服务器配置为 master，要确保服务器有 binlog 和 唯一的服务器ID。在 my.cnf 中加入以下配置： 123log-bin=master-binlog-bin-index=master-bin.indexserver-id=1 在 Master 上创建一个特殊复制权限的用户给slave使用: 12mysql&gt; CREATE USER &#x27;username&#x27; IDENTIFIED BY &#x27;password&#x27;;mysql&gt; GRANT REPLICATION SLAVE,SUPER,RELOAD ON *.* TO &#x27;username&#x27;; 配置slave:在 my.cnf 中加入以下配置(relay 是中继的意思)： 123server-id=2relay-log=slave-relay-binrelay-log-index=slave-relay-bin.index 让slave连接master:在 slave 上执行： 1234567mysql&gt; CHANGE MASTER TO MASTER_HOST = &#x27;172.17.0.2&#x27;, MASTER_PORT = 3306, MASTER_USER = &#x27;username&#x27;, MASTER_PASSWORD = &#x27;password&#x27;, GET_MASTER_PUBLIC_KEY = 1;mysql&gt; START SLAVE; 显示是否配置成功，slave中执行： 1mysql&gt; SHOW SLAVE STATUS; 1234567891011121314151617181920212223242526272829mysql&gt; show slave status \\G:*************************** 1. row ***************************​ Slave_IO_State: Waiting for source to send event​ Master_Host: 172.17.0.3​ Master_User: repl​ Master_Port: 3306​ Connect_Retry: 60​ Master_Log_File: mysql-bin.000009​ Read_Master_Log_Pos: 156​ Relay_Log_File: cd30dbb10151-relay-bin.000007​ Relay_Log_Pos: 371​ Relay_Master_Log_File: mysql-bin.000009​ Slave_IO_Running: Yes​ Slave_SQL_Running: Yes​ Replicate_Do_DB:","categories":[{"name":"mysql","slug":"mysql","permalink":"http://example.com/categories/mysql/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://example.com/tags/mysql/"}]},{"title":"docker常用命令","slug":"docker-docker常用命令","date":"2020-06-08T16:00:00.000Z","updated":"2022-01-17T13:11:07.843Z","comments":true,"path":"2020/06/09/docker-docker常用命令/","link":"","permalink":"http://example.com/2020/06/09/docker-docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","excerpt":"docker命令","text":"一、镜像相关 command describe docker images 查看已存在的镜像 docker images -a docker images -q docker images -qa docker images –digests 查看已存在的镜像的内部 查看已存在的镜像的ID 查看全部镜像的id 查看镜像说明 docker search xxx 查看某个镜像 (xxx=tomcat就是查看tomcat的镜像说明) docker pull xxx:tag 下载某个镜像 (xxx：镜像名，tag：镜像版本) docker rmi name/id:tag docker rmi -f name/id:tag 删除某个镜像 强制删除某个镜像 二、DockerFile name describe FROM 基础镜像，当前新镜像是基于哪个镜像的（scratch就相当于Java里面的Object） MAINTAINER 镜像维护者的姓名和邮箱地址 RUN 容器构建时需要运行的命令 EXPOSE 当前容器对外暴露出的端口 WORKDIR 指定在创建容器后，终端默认登录进来的工作目录，一个 ENV 用来在构建镜像过程中涉及环境变量 ADD 从宿主机拷贝并解压 COPY 从宿主机只拷贝 VOLUME 容器数据卷，用于保存和持久化工作 CMD 指定一个容器启动时要运行的命令,只有最后一个会生效，并且会被docker run 后面的参数替换掉 ENTRYPOINT 指定一个容器启动时要运行的命令，每一个都会被生效 ONBUILD 当构建一个被继承的Dockerfile时运行命令，父镜像在被子镜像继承后，父镜像的ONBUILD被触发 三、容器相关 command describe docker ps docker ps -as docker ps -l docker ps -n 3 查看正在运行的容器 查看全部的容器 上一次运行的容器 上三次运行的容器 docker start id 启动容器 docker stop id 关闭容器 docker kill id 强制停止 docker rm id 删除容器 docker rm -f id 强制删除容器 docker exec -it id xxx docker exec -it id /bin/bash 在容器外面去执行一个命令，xxx 就是你要执行的命令 进入某个容器 ctrl+p+Q 退出不关闭容器","categories":[{"name":"docker","slug":"docker","permalink":"http://example.com/categories/docker/"}],"tags":[{"name":"docker","slug":"docker","permalink":"http://example.com/tags/docker/"}]},{"title":"关于redis缓存的问题","slug":"redis-redis的几总问题","date":"2020-03-17T16:00:00.000Z","updated":"2022-01-17T13:11:39.950Z","comments":true,"path":"2020/03/18/redis-redis的几总问题/","link":"","permalink":"http://example.com/2020/03/18/redis-redis%E7%9A%84%E5%87%A0%E6%80%BB%E9%97%AE%E9%A2%98/","excerpt":"redis","text":"缓存穿透 问题来源 缓存穿透是指缓存和数据库中都没有的数据，而用户不断发起请求。由于缓存是不命中时被动写的，并且出于容错考虑，如果从存储层查不到数据则不写入缓存，这将导致这个不存在的数据每次请求都要到存储层去查询，失去了缓存的意义。 在流量大时，可能DB就挂掉了，要是有人利用不存在的key频繁攻击我们的应用，这就是漏洞。 如发起为id为“-1”的数据或id为特别大不存在的数据。这时的用户很可能是攻击者，攻击会导致数据库压力过大。 解决方案 接口层增加校验，如用户鉴权校验，id做基础校验，id&lt;=0的直接拦截； 从缓存取不到的数据，在数据库中也没有取到，这时也可以将key-value对写为key-null，缓存有效时间可以设置短点，如30秒（设置太长会导致正常情况也没法使用）。这样可以防止攻击用户反复用同一个id暴力攻击 布隆过滤器。bloomfilter就类似于一个hash set，用于快速判某个元素是否存在于集合中，其典型的应用场景就是快速判断一个key是否存在于某容器，不存在就直接返回。布隆过滤器的关键就在于hash算法和容器大小， 缓存击穿 问题来源 缓存击穿是指缓存中没有但数据库中有的数据（一般是缓存时间到期），这时由于并发用户特别多，同时读缓存没读到数据，又同时去数据库去取数据，引起数据库压力瞬间增大，造成过大压力。 解决方案 1、设置热点数据永远不过期。 2、接口限流与熔断，降级。重要的接口一定要做好限流策略，防止用户恶意刷接口，同时要降级准备，当接口中的某些 服务 不可用时候，进行熔断，失败快速返回机制。 3、加互斥锁 缓存雪崩 问题来源 缓存雪崩是指缓存中数据大批量到过期时间，而查询数据量巨大，引起数据库压力过大甚至down机。和缓存击穿不同的是，缓存击穿指并发查同一条数据，缓存雪崩是不同数据都过期了，很多数据都查不到从而查数据库。 解决方案 缓存数据的过期时间设置随机，防止同一时间大量数据过期现象发生。 如果缓存数据库是分布式部署，将热点数据均匀分布在不同的缓存数据库中。 设置热点数据永远不过期。","categories":[{"name":"redis","slug":"redis","permalink":"http://example.com/categories/redis/"}],"tags":[{"name":"redis","slug":"redis","permalink":"http://example.com/tags/redis/"}]},{"title":"Lambda表达式不只是匿名类的语法糖","slug":"Java-Lambda表达式不只是匿名类的语法糖","date":"2019-06-08T16:00:00.000Z","updated":"2022-01-17T13:10:44.659Z","comments":true,"path":"2019/06/09/Java-Lambda表达式不只是匿名类的语法糖/","link":"","permalink":"http://example.com/2019/06/09/Java-Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%8D%E5%8F%AA%E6%98%AF%E5%8C%BF%E5%90%8D%E7%B1%BB%E7%9A%84%E8%AF%AD%E6%B3%95%E7%B3%96/","excerpt":"Lambda表达式不只是匿名类的语法糖","text":"表达式简介Lambda表达式通常使用(argument) -&gt; (body)语法书写，如👇 12(arg1, arg2...) -&gt; &#123;body&#125;(type1 arg1, type2 arg2...) -&gt; &#123;body&#125; 一些Lambda表达式例子👇 12345(int a,int b) -&gt; &#123;return a + b&#125;() -&gt; System.out.println(&quot;Hello World&quot;);(String s) -&gt; &#123;System.out.println(s);&#125;() -&gt; 42() -&gt; &#123;return 3.1415&#125; 表达式结构 一个Lambda表达式可以有零个或多个参数 参数的类型既可以明确声明，也可以根据上下文来推断。例如：(int a)与(a)效果相同 所有参数需包含在圆括号内，参数之间用逗号相隔。例如：(a,b)或(int a, int b)或(String a, int b, float c) 空圆括号代表参数集为空。例如() -&gt; 42 当只有一个参数，且其类型可推导时，圆括号可省略，如a -&gt; return a*a Lambda表达式的主体可能包含零条或多条语句 如果Lambda表达式的主体只有一条语句，花括号可省略。匿名函数的返回类型与该主体表达式一致 如果Lambda表达式的主体包含一条以上语句，则表达式必须包含在花括号中（形成代码块）。匿名函数的返回类型与代码块的返回类型一致，若没有返回则为空 函数式接口在Java中，Marker（标记）类型的接口是一种没有方法或属性声明的接口。简单地说，Marker接口是空接口。相似地，函数式接口是只包含一个抽象方法声明的接口。 java.lang.Runnable就是一种函数式接口，在Runnable接口中之声明了一个方法void run()，相似地，ActionListener接口也是一种函数式接口，我们使用匿名内部类来实例化函数式接口的对象，有了Lambda表达式，这一方式可以得到简化。 每个Lambda表达式都能隐式地赋值给函数式接口，例如，我们可以通过Lambda表达式创建Runnable接口的引用👇 1Runnable r = () -&gt; System.out.println(&quot;Hello World&quot;); 当不指明函数式接口时，编译器会自动解释这种转化👇 123new Thread( () -&gt; System.out.println(&quot;Hello World&quot;);).start(); 因此，在上面的代码中，编译器会自动推断：根据线程类的构造函数签名public Thread(Runnable r) &#123;&#125;，将该Lambda表达式赋给Runnable接口。 其他Lambda表达式及其函数式接口： 12345678910Consumer&lt;Integer&gt; c = (int x) -&gt; &#123;System.out.println(x)&#125;;BiConsumer&lt;Integer, String&gt; b = (Integer x, String y) -&gt; System.out.println(x + &quot; : &quot; + y);Predicater&lt;String&gt; p = (String s) -&gt; &#123;s == null&#125;;以下是一种自定义的函数式接口👇```java@FunctionalInterfacepublic interface WorkerInterface &#123; void doSomeWork();&#125; 定义好函数式接口后，我们就可以使用了👇 123456789101112131415161718public class WorkerInterfaceTest &#123; public static void execute(WorkerInterface worker) &#123; worker.doSomeWork(); &#125; public static void main(String[] args) &#123; // old method in java 7 execute(new WorkerInterface() &#123; @Override public void doSomeWork() &#123; System.out.println(&quot;Work in Java 7&quot;); &#125; &#125;); // new method in java 8 execute( () -&gt; &#123;System.out.println(&quot;Work in Java 8&quot;)&#125;); &#125;&#125; 应用 线程通过Lambda初始化 PS：Lambda可以视为一个匿名内部类对象，我们创建的Lambda表达式实质是创建一个对象，所以只要我们创建了接口对应的对象，然后将对应传递给指定的方法，即可完成方法的实际调用 12345678910// old methodnew Thread(new Runnable() &#123; @Override public void run() &#123; System.out.println(&quot;Hello From Java 7&quot;); &#125;&#125;); // new methodnew Thread( () -&gt; System.out.println(&quot;Hello From Java 8&quot;); ).start(); Swing的事件处理 12345678910// old methodbutton.addActionListener(new ActionListener() &#123; @Override public void actionPerformed(ActionEvent e) &#123; System.out.println(&quot;Using old method click the button&quot;); &#125;&#125;); // new methodbutton.addActionListener( (e) -&gt; System.out.println(&quot;Using new method click the button&quot;);); 打印给定数组中的所有元素 123456789101112// old methodList&lt;Integer&gt; list = Arrays.asList(1, 2, 3, 4, 5, 6, 7);for (Integer n : list) &#123; System.out.println(n);&#125; // new methodList&lt;Integer&gt; list = Arrays.asList(1, 2, 3, 4, 5, 6, 7);list.forEach(n -&gt; System.out.println(n)); // another methodlist.forEach(System.out::println); 打印list中每个元素的平方 12345678910// old methodList&lt;Integer&gt; list = Arrays.asList(1, 2, 3, 4, 5, 6, 7);for (Integer n : list) &#123; int x = n * n; System.out.println(x);&#125; // new methodList&lt;Integer&gt; list = Arrays.asList(1, 2, 3, 4, 5, 6, 7);list.stream().map((x) -&gt; x*x).forEach(System.out::println); Lambda与匿名内部类 对于匿名内部类，关键字this解读为匿名类 对于Lambda表达式，关键词this解读为Lambda的外部类，且Java在编译代码时将Lambda表达式转化为类内的私有函数，它使用Java 7中的invokedynamic指令动态绑定该方法","categories":[{"name":"java8 java","slug":"java8-java","permalink":"http://example.com/categories/java8-java/"}],"tags":[{"name":"java java8","slug":"java-java8","permalink":"http://example.com/tags/java-java8/"}]},{"title":"关于反射","slug":"Java-关于反射","date":"2019-06-08T16:00:00.000Z","updated":"2022-01-17T13:10:39.464Z","comments":true,"path":"2019/06/09/Java-关于反射/","link":"","permalink":"http://example.com/2019/06/09/Java-%E5%85%B3%E4%BA%8E%E5%8F%8D%E5%B0%84/","excerpt":"关于反射","text":"常用类的概述Constructor类表示的是Class 对象所表示的类的构造方法，利用它可以在运行时动态创建对象； Field表示Class对象所表示的类的成员变量，通过它可以在运行时动态修改成员变量的属性值(包含private)； Method表示Class对象所表示的类的成员方法，通过它可以动态调用对象的方法(包含private)，","categories":[{"name":"java","slug":"java","permalink":"http://example.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://example.com/tags/java/"}]},{"title":"Maven依赖管理","slug":"Java-2018-07-24-maven依赖管理","date":"2019-04-09T16:00:00.000Z","updated":"2022-01-17T13:10:59.925Z","comments":true,"path":"2019/04/10/Java-2018-07-24-maven依赖管理/","link":"","permalink":"http://example.com/2019/04/10/Java-2018-07-24-maven%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/","excerpt":"Maven依赖管理","text":"Maven依赖管理本文主要总结了，在多module的项目中，父子依赖关系是如何创建及管理的。 前提现在假设有这样一个项目：实现一个简单的rpc，则我们需要三个模块： 注册中心 服务消费方 服务提供方 其中，服务提供方需要注册到注册中心，服务消费方需要从注册中心获取服务提供方的列表，则三个模块都需要注册中心的依赖；服务消费方和服务提供方之间需要进行通信，则这两个模块都需要通信的依赖。 如何创建一个父子模块的依赖关系首先，父子模块的关系体现在 文件目录结构上的层级 pom中的管理 其中，我们在预设的父模块pom.xml中添加如下标签： 12345&lt;modules&gt; &lt;module&gt;rpc-discover&lt;/module&gt; &lt;module&gt;rpc-provider&lt;/module&gt; &lt;module&gt;rpc-consumer&lt;/module&gt;&lt;/modules&gt; 这样，我们就指定了rpc-discover、rpc-provider、rpc-consumer为rpc-root的子模块，子模块可以使用父模块的依赖。 dependencyManagement在rpc-root中，通过使用&lt;dependencyManagement&gt;&lt;/dependencyManagement&gt;标签来管理依赖的版本。 rpc-root.xml 12345678910111213141516171819202122232425&lt;groupId&gt;me.sxl&lt;/groupId&gt;&lt;artifactId&gt;rpc-root&lt;/artifactId&gt;&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;&lt;packaging&gt;pom&lt;/packaging&gt; &lt;modules&gt; &lt;module&gt;rpc-discover&lt;/module&gt; &lt;module&gt;rpc-provider&lt;/module&gt; &lt;module&gt;rpc-consumer&lt;/module&gt;&lt;/modules&gt; &lt;properties&gt; &lt;lombok.version&gt;1.18.8&lt;/lombok.version&gt;&lt;/properties&gt; &lt;dependencyManagement&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;version&gt;$&#123;lombok.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt;&lt;/dependencyManagement&gt; rpc-discover.xml 1234567891011121314&lt;parent&gt; &lt;groupId&gt;me.sxl&lt;/groupId&gt; &lt;artifactId&gt;rpc-root&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;&lt;/parent&gt;&lt;artifactId&gt;rpc-discover&lt;/artifactId&gt;&lt;packaging&gt;jar&lt;/packaging&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;/dependency&gt;&lt;/dependencies&gt; 这样，我们就可以在rpc-discover模块中使用版本为1.18.8的lombok依赖，再添加更多的依赖，只需要在父模块中对依赖的版本进行统一的管理，子模块只需要继承即可使用。 dependencies不同于&lt;dependencyManagement&gt;&lt;/dependencyManagement&gt;这对标签，在&lt;dependencies&gt;&lt;/dependencies&gt;中引入的依赖都会被子项目自动引入，并默认被所有的子项目继承。 rpc-root.xml 12345678910111213141516171819202122&lt;groupId&gt;me.sxl&lt;/groupId&gt;&lt;artifactId&gt;rpc-root&lt;/artifactId&gt;&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;modules&gt; &lt;module&gt;rpc-discover&lt;/module&gt; &lt;module&gt;rpc-provider&lt;/module&gt; &lt;module&gt;rpc-consumer&lt;/module&gt;&lt;/modules&gt; &lt;properties&gt; &lt;lombok.version&gt;1.18.8&lt;/lombok.version&gt;&lt;/properties&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;version&gt;$&#123;lombok.version&#125;&lt;/version&gt; &lt;/dependency&gt;&lt;/dependencies&gt; rpc-discover.xml 123456&lt;parent&gt; &lt;groupId&gt;me.sxl&lt;/groupId&gt; &lt;artifactId&gt;rpc-root&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;&lt;/parent&gt;&lt;artifactId&gt;rpc-discover&lt;/artifactId&gt; 总结dependencyManagement内只进行依赖声明，不实现引入，所以子项目使用dependencyManagement的依赖需要显示地声明；只有在子项目中写了该依赖项，并且没有指定具体版本，才会从父项目中继承该项，并且 version 和 scope 都读取自父 pom; 另外如果子项目中指定了版本号，那么会使用子项目中指定的版本。 dependencies的子项目回自动继承声明的全部依赖。","categories":[{"name":"maven","slug":"maven","permalink":"http://example.com/categories/maven/"}],"tags":[{"name":"maven","slug":"maven","permalink":"http://example.com/tags/maven/"}]},{"title":"关于mysql优化","slug":"sql-mysql优化","date":"2019-04-02T16:00:00.000Z","updated":"2022-01-11T16:47:28.140Z","comments":true,"path":"2019/04/03/sql-mysql优化/","link":"","permalink":"http://example.com/2019/04/03/sql-mysql%E4%BC%98%E5%8C%96/","excerpt":"关于mysql优化","text":"否定查询不能使用索引12345select name from user where id not in (1,3,4); @pdai: 代码已经复制到剪贴板 应该修改为: 12345select name from user where id in (2,5,6); @pdai: 代码已经复制到剪贴板 前导模糊查询不能使用索引, 如: 12345select name from user where name like &#x27;%zhangsan&#x27; @pdai: 代码已经复制到剪贴板 非前导则可以: 12345select name from user where name like &#x27;zhangsan%&#x27; @pdai: 代码已经复制到剪贴板 建议可以考虑使用 Lucene 等全文索引工具来代替频繁的模糊查询。 数据区分不明显的不建议创建索引如 user 表中的性别字段，可以明显区分的才建议创建索引，如身份证等字段。 字段的默认值不要为 null这样会带来和预期不一致的查询结果。 在字段上进行计算不能命中索引12345select name from user where FROM_UNIXTIME(create_time) &lt; CURDATE(); @pdai: 代码已经复制到剪贴板 应该修改为: 12345select name from user where create_time &lt; FROM_UNIXTIME(CURDATE()); @pdai: 代码已经复制到剪贴板 最左前缀问题如果给 user 表中的 username pwd 字段创建了复合索引那么使用以下SQL 都是可以命中索引: 123456789select username from user where username=&#x27;zhangsan&#x27; and pwd =&#x27;axsedf1sd&#x27;select username from user where pwd =&#x27;axsedf1sd&#x27; and username=&#x27;zhangsan&#x27;select username from user where username=&#x27;zhangsan&#x27; @pdai: 代码已经复制到剪贴板 但是使用 12345select username from user where pwd =&#x27;axsedf1sd&#x27; @pdai: 代码已经复制到剪贴板 是不能命中索引的。 如果明确知道只有一条记录返回12345select name from user where username=&#x27;zhangsan&#x27; limit 1 @pdai: 代码已经复制到剪贴板 可以提高效率，可以让数据库停止游标移动。 不要让数据库帮我们做强制类型转换12345select name from user where telno=18722222222 @pdai: 代码已经复制到剪贴板 这样虽然可以查出数据，但是会导致全表扫描。需要修改为 12345select name from user where telno=&#x27;18722222222&#x27; @pdai: 代码已经复制到剪贴板 如果需要进行 join 的字段两表的字段类型要相同, 不然也不会命中索引","categories":[{"name":"mysql","slug":"mysql","permalink":"http://example.com/categories/mysql/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://example.com/tags/mysql/"}]},{"title":"ssh 配置","slug":"git-2017-03-18-ssh","date":"2018-03-18T12:34:07.000Z","updated":"2022-01-17T13:10:29.311Z","comments":true,"path":"2018/03/18/git-2017-03-18-ssh/","link":"","permalink":"http://example.com/2018/03/18/git-2017-03-18-ssh/","excerpt":"gulp构建一个小项目","text":"ssh多个秘钥管理ssh-agent服务管理员模式启动Windows PowerShell1.使用下面两个命令行启动ssh-agent服务1Set-Service -Name ssh-agent -StartupType Manual 1Start-Service ssh-agent 2.添加到代理 1ssh-add ~/.ssh/自定义秘钥名称 3.配置git1git config --global user.email “1044934446@qq.com” 4.生成密钥 1ssh-keygen -t rsa","categories":[{"name":"git","slug":"git","permalink":"http://example.com/categories/git/"}],"tags":[{"name":"gulp","slug":"gulp","permalink":"http://example.com/tags/gulp/"}]}],"categories":[{"name":"mysql","slug":"mysql","permalink":"http://example.com/categories/mysql/"},{"name":"docker","slug":"docker","permalink":"http://example.com/categories/docker/"},{"name":"redis","slug":"redis","permalink":"http://example.com/categories/redis/"},{"name":"java8 java","slug":"java8-java","permalink":"http://example.com/categories/java8-java/"},{"name":"java","slug":"java","permalink":"http://example.com/categories/java/"},{"name":"maven","slug":"maven","permalink":"http://example.com/categories/maven/"},{"name":"git","slug":"git","permalink":"http://example.com/categories/git/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://example.com/tags/mysql/"},{"name":"docker","slug":"docker","permalink":"http://example.com/tags/docker/"},{"name":"redis","slug":"redis","permalink":"http://example.com/tags/redis/"},{"name":"java java8","slug":"java-java8","permalink":"http://example.com/tags/java-java8/"},{"name":"java","slug":"java","permalink":"http://example.com/tags/java/"},{"name":"maven","slug":"maven","permalink":"http://example.com/tags/maven/"},{"name":"gulp","slug":"gulp","permalink":"http://example.com/tags/gulp/"}]}